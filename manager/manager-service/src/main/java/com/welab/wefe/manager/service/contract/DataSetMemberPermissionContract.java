/*
 * Copyright 2021 Tianmian Tech. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.welab.wefe.manager.service.contract;

import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.*;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple7;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

@SuppressWarnings("unchecked")
public class DataSetMemberPermissionContract extends Contract {
    public static final String[] BINARY_ARRAY = {"", "", "000000000000028152600401611cc5919061431f565b602060405180830381600087803b158015611cdf57600080fd5b505af1158015611cf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d179190810190613bfb565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611d7d57600080fd5b505af1158015611d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611db59190810190613b80565b92508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18e6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e0c91906145d6565b600060405180830381600087803b158015611e2657600080fd5b505af1158015611e3a573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611ea257600080fd5b505af1158015611eb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611eda9190810190613bd2565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168d6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f319190614454565b600060405180830381600087803b158015611f4b57600080fd5b505af1158015611f5f573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168c6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611fb891906143ff565b600060405180830381600087803b158015611fd257600080fd5b505af1158015611fe6573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161203f919061462b565b600060405180830381600087803b15801561205957600080fd5b505af115801561206d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016120c69190614581565b600060405180830381600087803b1580156120e057600080fd5b505af11580156120f4573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16632ef8ba74896040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161214d9190614533565b600060405180830381600087803b15801561216757600080fd5b505af115801561217b573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121d491906144a9565b600060405180830381600087803b1580156121ee57600080fd5b505af1158015612202573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3030330000000000000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612294939291906143a1565b602060405180830381600087803b1580156122ae57600080fd5b505af11580156122c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122e69190810190613c24565b90506001811215156122fb576000945061231f565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7fc14b935603e398b2024d314b5155b8507ec77056d2195ab98fa7e18af0a67e20858e8e8e8e8e8e8e60405161235c989796959493929190614277565b60405180910390a18095505b5050505050979650505050505050565b600080600080600080935061238c8c610fd0565b15612421577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507fc0d844becfcc141ed1bcf48131982727784ed6435ca8f53352fd7f9b89b951c9848d8d8d8d8d8d8d6040516123f1989796959493929190614277565b60405180910390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9450612b8a565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016124cc919061431f565b602060405180830381600087803b1580156124e657600080fd5b505af11580156124fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061251e9190810190613bfb565b92508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561258457600080fd5b505af1158015612598573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506125bc9190810190613bd2565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600a81526020017f6669785f69645f303033000000000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161264891906144de565b600060405180830381600087803b15801561266257600080fd5b505af1158015612676573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168d6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016126cf91906145d6565b600060405180830381600087803b1580156126e957600080fd5b505af11580156126fd573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168c6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127569190614454565b600060405180830381600087803b15801561277057600080fd5b505af1158015612784573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127dd91906143ff565b600060405180830381600087803b1580156127f757600080fd5b505af115801561280b573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612864919061462b565b600060405180830381600087803b15801561287e57600080fd5b505af1158015612892573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128eb9190614581565b600060405180830381600087803b15801561290557600080fd5b505af1158015612919573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16632ef8ba74886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016129729190614533565b600060405180830381600087803b15801561298c57600080fd5b505af11580156129a0573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016129f991906144a9565b600060405180830381600087803b158015612a1357600080fd5b505af1158015612a27573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166331afac366040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612ab7929190614371565b602060405180830381600087803b158015612ad157600080fd5b505af1158015612ae5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b099190810190613c24565b90506001811415612b1d5760009350612b41565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fc0d844becfcc141ed1bcf48131982727784ed6435ca8f53352fd7f9b89b951c9848d8d8d8d8d8d8d604051612b7e989796959493929190614277565b60405180910390a18094505b50505050979650505050505050565b60008060008060008093506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612c4f919061431f565b602060405180830381600087803b158015612c6957600080fd5b505af1158015612c7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ca19190810190613bfb565b92508273ffffffffffffffffffff", "ffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612d0757600080fd5b505af1158015612d1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d3f9190810190613b80565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612d969190614454565b600060405180830381600087803b158015612db057600080fd5b505af1158015612dc4573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166328bb21176040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612e54929190614341565b602060405180830381600087803b158015612e6e57600080fd5b505af1158015612e82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ea69190810190613c24565b9050600181121515612ebb5760009350612edf565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fe09f4966609778cce39c8e76b023c6fdcfdc04aec687aabf43f58e8084ddb9528487604051612f10929190614202565b60405180910390a180945050505050919050565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612f9057600080fd5b505af1158015612fa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612fc89190810190613c24565b604051908082528060200260200182016040528015612ffb57816020015b6060815260200190600190039081612fe65790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561306757600080fd5b505af115801561307b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061309f9190810190613c24565b83121561381b578573ffffffffffffffffffffffffffffffffffffffff1663846719e0846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016130fb919061418e565b602060405180830381600087803b15801561311557600080fd5b505af1158015613129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061314d9190810190613bd2565b915061323f6132048373ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016131a8906145b6565b600060405180830381600087803b1580156131c257600080fd5b505af11580156131d6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506131ff9190810190613cca565b613827565b6040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613880565b90506132fc816132f78473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161329b90614434565b600060405180830381600087803b1580156132b557600080fd5b505af11580156132c9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506132f29190810190613cca565b613827565b613880565b905061333d816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613880565b90506133fa816133f58473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401613399906143df565b600060405180830381600087803b1580156133b357600080fd5b505af11580156133c7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506133f09190810190613cca565b613827565b613880565b905061343b816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613880565b90506134f8816134f38473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016134979061460b565b600060405180830381600087803b1580156134b157600080fd5b505af11580156134c5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506134ee9190810190613cca565b613827565b613880565b9050613539816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613880565b90506135f6816135f18473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161359590614561565b600060405180830381600087803b1580156135af57600080fd5b505af11580156135c3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506135ec9190810190613cca565b613827565b613880565b9050613637816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613880565b90506136f4816136ef8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161369390614513565b600060405180830381600087803b1580156136ad57600080fd5b505af11580156136c1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506136ea9190810190613cca565b613827565b613880565b9050613735816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613880565b90506137f2816137ed8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161379190614489565b600060405180830381600087803b1580156137ab57600080fd5b505af11580156137bf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506137e89190810190613cca565b613827565b613880565b905080848481518110151561380357fe5b90602001906020020181905250826001019250613003565b83945050505050919050565b6060600061383483613a51565b1415613877576040805190810160405280600181526020017f2000000000000000000000000000000000000000000000000000000000000000815250905061387b565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f1916602001820160405280156138c85781602001602082028038833980820191505090505b50935083925060009150600090505b855181101561398a5785818151811015156138ee57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561394d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506138d7565b600090505b8451811015613a425784818151811015156139a657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515613a0557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061398f565b83965050505050505092915050565b600081519050919050565b6000613a68825161472a565b905092915050565b6000613a7c825161473c565b905092915050565b6000613a90825161474e565b905092915050565b6000613aa48251614760565b905092915050565b6000613ab88235614772565b905092915050565b6000613acc8251614772565b905092915050565b600082601f8301121515613ae757600080fd5b8135613afa613af58261468d565b614660565b91508082526020830160208301858383011115613b1657600080fd5b613b218382846147a0565b50505092915050565b600082601f8301121515613b3d57600080fd5b8151613b50613b4b8261468d565b614660565b91508082526020830160208301858383011115613b6c57600080fd5b613b778382846147af565b50505092915050565b600060208284031215613b9257600080fd5b6000613ba084828501613a5c565b91505092915050565b600060208284031215613bbb57600080fd5b6000613bc984828501613a70565b91505092915050565b600060208284031215613be457600080fd5b6000613bf284828501613a84565b91505092915050565b600060208284031215613c0d57600080fd5b6000613c1b84828501613a98565b91505092915050565b600060208284031215613c3657600080fd5b6000613c4484828501613ac0565b91505092915050565b60008060408385031215613c6057600080fd5b6000613c6e85828601613aac565b9250506020613c7f85828601613aac565b9150509250929050565b600060208284031215613c9b57600080fd5b600082013567ffffffffffffffff811115613cb5", "57600080fd5b613cc184828501613ad4565b91505092915050565b600060208284031215613cdc57600080fd5b600082015167ffffffffffffffff811115613cf657600080fd5b613d0284828501613b2a565b91505092915050565b60008060408385031215613d1e57600080fd5b600083013567ffffffffffffffff811115613d3857600080fd5b613d4485828601613ad4565b925050602083013567ffffffffffffffff811115613d6157600080fd5b613d6d85828601613ad4565b9150509250929050565b600080600080600080600060e0888a031215613d9257600080fd5b600088013567ffffffffffffffff811115613dac57600080fd5b613db88a828b01613ad4565b975050602088013567ffffffffffffffff811115613dd557600080fd5b613de18a828b01613ad4565b965050604088013567ffffffffffffffff811115613dfe57600080fd5b613e0a8a828b01613ad4565b955050606088013567ffffffffffffffff811115613e2757600080fd5b613e338a828b01613ad4565b945050608088013567ffffffffffffffff811115613e5057600080fd5b613e5c8a828b01613ad4565b93505060a0613e6d8a828b01613aac565b92505060c088013567ffffffffffffffff811115613e8a57600080fd5b613e968a828b01613ad4565b91505092959891949750929550565b6000613eb0826146c6565b80845260208401935083602082028501613ec9856146b9565b60005b84811015613f02578383038852613ee4838351613f85565b9250613eef826146e7565b9150602088019750600181019050613ecc565b508196508694505050505092915050565b613f1c81614714565b82525050565b613f2b8161477c565b82525050565b613f3a8161478e565b82525050565b613f4981614720565b82525050565b6000613f5a826146dc565b808452613f6e8160208601602086016147af565b613f77816147e2565b602085010191505092915050565b6000613f90826146d1565b808452613fa48160208601602086016147af565b613fad816147e2565b602085010191505092915050565b6000600982527f6d656d6265725f696400000000000000000000000000000000000000000000006020830152604082019050919050565b6000600b82527f646174615f7365745f69640000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6c6f675f74696d650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600282527f69640000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b60006020820190506141886000830184613f13565b92915050565b60006020820190506141a36000830184613f40565b92915050565b60006040820190506141be6000830185613f40565b81810360208301526141d08184613ea5565b90509392505050565b60006040820190506141ee6000830185613f40565b6141fb6020830184613f40565b9392505050565b60006040820190506142176000830185613f40565b81810360208301526142298184613f4f565b90509392505050565b60006060820190506142476000830186613f40565b81810360208301526142598185613f4f565b9050818103604083015261426d8184613f4f565b9050949350505050565b60006101008201905061428d600083018b613f40565b818103602083015261429f818a613f4f565b905081810360408301526142b38189613f4f565b905081810360608301526142c78188613f4f565b905081810360808301526142db8187613f4f565b905081810360a08301526142ef8186613f4f565b90506142fe60c0830185613f40565b81810360e08301526143108184613f4f565b90509998505050505050505050565b600060208201905081810360008301526143398184613f85565b905092915050565b6000604082019050818103600083015261435b8185613f85565b905061436a6020830184613f22565b9392505050565b6000604082019050818103600083015261438b8185613f85565b905061439a6020830184613f31565b9392505050565b600060608201905081810360008301526143bb8186613f85565b90506143ca6020830185613f31565b6143d76040830184613f22565b949350505050565b600060208201905081810360008301526143f881613fbb565b9050919050565b6000604082019050818103600083015261441881613fbb565b9050818103602083015261442c8184613f4f565b905092915050565b6000602082019050818103600083015261444d81613ff2565b9050919050565b6000604082019050818103600083015261446d81613ff2565b905081810360208301526144818184613f4f565b905092915050565b600060208201905081810360008301526144a281614029565b9050919050565b600060408201905081810360008301526144c281614029565b905081810360208301526144d68184613f4f565b905092915050565b600060408201905081810360008301526144f781614060565b9050818103602083015261450b8184613f85565b905092915050565b6000602082019050818103600083015261452c81614097565b9050919050565b6000604082019050818103600083015261454c81614097565b905061455b6020830184613f40565b92915050565b6000602082019050818103600083015261457a816140ce565b9050919050565b6000604082019050818103600083015261459a816140ce565b905081810360208301526145ae8184613f4f565b905092915050565b600060208201905081810360008301526145cf81614105565b9050919050565b600060408201905081810360008301526145ef81614105565b905081810360208301526146038184613f4f565b905092915050565b600060208201905081810360008301526146248161413c565b9050919050565b600060408201905081810360008301526146448161413c565b905081810360208301526146588184613f4f565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561468357600080fd5b8060405250919050565b600067ffffffffffffffff8211156146a457600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000614735826146f4565b9050919050565b6000614747826146f4565b9050919050565b6000614759826146f4565b9050919050565b600061476b826146f4565b9050919050565b6000819050919050565b6000614787826146f4565b9050919050565b6000614799826146f4565b9050919050565b82818337600083830152505050565b60005b838110156147cd5780820151818401526020810190506147b2565b838111156147dc576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058203d09fabc605b0a8fbc01534b73a69eeab5a14362996f6c81df20aa27c4b1256a6c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"60806040523480156200001157600080fd5b506110016000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92a78016040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162000101919062000296565b602060405180830381600087803b1580156200011c57600080fd5b505af115801562000131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000157919081019062000174565b5062000340565b60006200016c8251620002ef565b905092915050565b6000602082840312156200018757600080fd5b600062000197848285016200015e565b91505092915050565b6000620001ad82620002e4565b808452620001c3816020860160208601620002f9565b620001ce816200032f565b602085010191505092915050565b6000604482527f69642c646174615f7365745f69642c6d656d6265725f69642c6372656174656460208301527f5f74696d652c757064617465645f74696d652c6c6f675f74696d652c6578745f60408301527f6a736f6e000000000000000000000000000000000000000000000000000000006060830152608082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006060820190508181036000830152620002b28184620001a0565b90508181036020830152620002c7816200025f565b90508181036040830152620002dc81620001dc565b905092915050565b600081519050919050565b6000819050919050565b60005b8381101562000319578082015181840152602081019050620002fc565b8381111562000329576000848401525b50505050565b6000601f19601f8301169050919050565b61482e80620003506000396000f300608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e2f659d1461009e5780631228fe19146100db5780632a5f68ed146101185780634f37e6e514610155578063568fe88514610193578063583f9478146101d05780636342fe7b1461020d578063c181ca361461024b578063e5dc357014610277575b600080fd5b3480156100aa57600080fd5b506100c560048036036100c09190810190613c8a565b6102b5565b6040516100d2919061418f565b60405180910390f35b3480156100e757600080fd5b5061010260048036036100fd9190810190613d78565b610640565b60405161010f919061418f565b60405180910390f35b34801561012457600080fd5b5061013f600480360361013a9190810190613d78565b610e4a565b60405161014c919061418f565b60405180910390f35b34801561016157600080fd5b5061017c60048036036101779190810190613c8a565b61166b565b60405161018a9291906141aa565b60405180910390f35b34801561019f57600080fd5b506101ba60048036036101b59190810190613c8a565b611a9d565b6040516101c79190614174565b60405180910390f35b3480156101dc57600080fd5b506101f760048036036101f29190810190613d0c565b611e61565b604051610204919061418f565b60405180910390f35b34801561021957600080fd5b50610234600480360361022f9190810190613c4e565b612319565b6040516102429291906141aa565b60405180910390f35b34801561025757600080fd5b5061026061274f565b60405161026e9291906141aa565b60405180910390f35b34801561028357600080fd5b5061029e60048036036102999190810190613c8a565b612af3565b6040516102ac9291906141aa565b60405180910390f35b60008060008060008093506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161036b9190614320565b602060405180830381600087803b15801561038557600080fd5b505af1158015610399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103bd9190810190613bfc565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561042357600080fd5b505af1158015610437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061045b9190810190613b81565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104b29190614400565b600060405180830381600087803b1580156104cc57600080fd5b505af11580156104e0573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166309ff42f06040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610570929190614342565b602060405180830381600087803b15801561058a57600080fd5b505af115801561059e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105c29190810190613c25565b90506001811215156105d757600093506105fb565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f20f837690ca1f35aa07d230609a95259b44ca770389085fd818685c0d16a8e95848760405161062c929190614203565b60405180910390a180945050505050919050565b600080600080600080600094506106568d611a9d565b15156106ec577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507f8ef7162f3a3dcb46a71eec69908d5a8530aa63dda24b5dfa23c20f704e01b72c858e8e8e8e8e8e8e6040516106bc989796959493929190614278565b60405180910390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9550610e3a565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016107979190614320565b602060405180830381600087803b1580156107b157600080fd5b505af11580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107e99190810190613bfc565b93508373ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561084f57600080fd5b505af1158015610863573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108879190810190613b81565b92508273ffffffffffffffffffffffffffffffffffffffff1663ae763db58e6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016108de91906145a2565b600060405180830381600087803b1580156108f857600080fd5b505af115801561090c573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561097457600080fd5b505af1158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109ac9190810190613bd3565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48d6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a039190614400565b600060405180830381600087803b158015610a1d57600080fd5b505af1158015610a31573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48c6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a8a91906144aa565b600060405180830381600087803b158015610aa457600080fd5b505af1158015610ab8573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b1191906144ff565b600060405180830381600087803b158015610b2b57600080fd5b505af1158015610b3f573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b989190614455565b600060405180830381600087803b158015610bb257600080fd5b505af1158015610bc6573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663def42698896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610c1f9190614554565b600060405180830381600087803b158015610c3957600080fd5b505af1158015610c4d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ca6919061462c565b600060405180830381", "600087803b158015610cc057600080fd5b505af1158015610cd4573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663664b37d66040805190810160405280600a81526020017f6669785f69645f3030330000000000000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d66939291906143a2565b602060405180830381600087803b158015610d8057600080fd5b505af1158015610d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610db89190810190613c25565b9050600181121515610dcd5760009450610df1565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7f8ef7162f3a3dcb46a71eec69908d5a8530aa63dda24b5dfa23c20f704e01b72c858e8e8e8e8e8e8e604051610e2e989796959493929190614278565b60405180910390a18095505b5050505050979650505050505050565b6000806000806000809350610e5e8c611a9d565b15610ef3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507f0541655c3d49a0dd0d71384602057b81c0c3233fa1a59e45789fbea68e500cb7848d8d8d8d8d8d8d604051610ec3989796959493929190614278565b60405180910390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff945061165c565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f9e9190614320565b602060405180830381600087803b158015610fb857600080fd5b505af1158015610fcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ff09190810190613bfc565b92508273ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561105657600080fd5b505af115801561106a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061108e9190810190613bd3565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb46040805190810160405280600a81526020017f6669785f69645f303033000000000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161111a91906145d7565b600060405180830381600087803b15801561113457600080fd5b505af1158015611148573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48d6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111a191906145a2565b600060405180830381600087803b1580156111bb57600080fd5b505af11580156111cf573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48c6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112289190614400565b600060405180830381600087803b15801561124257600080fd5b505af1158015611256573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112af91906144aa565b600060405180830381600087803b1580156112c957600080fd5b505af11580156112dd573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48a6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161133691906144ff565b600060405180830381600087803b15801561135057600080fd5b505af1158015611364573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113bd9190614455565b600060405180830381600087803b1580156113d757600080fd5b505af11580156113eb573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663def42698886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114449190614554565b600060405180830381600087803b15801561145e57600080fd5b505af1158015611472573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114cb919061462c565b600060405180830381600087803b1580156114e557600080fd5b505af11580156114f9573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611589929190614372565b602060405180830381600087803b1580156115a357600080fd5b505af11580156115b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115db9190810190613c25565b905060018114156115ef5760009350611613565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f0541655c3d49a0dd0d71384602057b81c0c3233fa1a59e45789fbea68e500cb7848d8d8d8d8d8d8d604051611650989796959493929190614278565b60405180910390a18094505b50505050979650505050505050565b6000606060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161171f9190614320565b602060405180830381600087803b15801561173957600080fd5b505af115801561174d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117719190810190613bfc565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156117d757600080fd5b505af11580156117eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061180f9190810190613b81565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161186691906144aa565b600060405180830381600087803b15801561188057600080fd5b505af1158015611894573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611924929190614342565b602060405180830381600087803b15801561193e57600080fd5b505af1158015611952573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119769190810190613baa565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156119dc57600080fd5b505af11580156119f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a149190810190613c25565b60001415611a82577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd6000604051908082528060200260200182016040528015611a7257816020015b6060815260200190600190039081611a5d5790505b5081915080905094509450611a95565b6000611a8d82612f25565b819150945094505b505050915091565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b4e9190614320565b602060405180830381600087803b158015611b6857600080fd5b505af1158015611b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ba09190810190613bfc565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611c0657600080fd5b505af1158015611c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c3e9190810190613b81565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c9591906145a2565b600060405180830381600087803b158015611caf57600080fd5b", "505af1158015611cc3573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d53929190614342565b602060405180830381600087803b158015611d6d57600080fd5b505af1158015611d81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611da59190810190613baa565b905060008173ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611e0d57600080fd5b505af1158015611e21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e459190810190613c25565b1115611e545760019350611e59565b600093505b505050919050565b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f159190614320565b602060405180830381600087803b158015611f2f57600080fd5b505af1158015611f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f679190810190613bfc565b94508473ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611fcd57600080fd5b505af1158015611fe1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120059190810190613b81565b93508373ffffffffffffffffffffffffffffffffffffffff1663ae763db5896040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161205c9190614400565b600060405180830381600087803b15801561207657600080fd5b505af115801561208a573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156120f257600080fd5b505af1158015612106573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061212a9190810190613bd3565b92508273ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612181919061462c565b600060405180830381600087803b15801561219b57600080fd5b505af11580156121af573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff1663664b37d66040805190810160405280600a81526020017f6669785f69645f3030330000000000000000000000000000000000000000000081525085876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612241939291906143a2565b602060405180830381600087803b15801561225b57600080fd5b505af115801561226f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122939190810190613c25565b9150600090506001821215156122ac57600090506122d0565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90505b7f0e1e3faa5d548368037d4312f850b81148f6d5cb74e841160325d7ea9066007581898960405161230393929190614233565b60405180910390a1809550505050505092915050565b6000606060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123cd9190614320565b602060405180830381600087803b1580156123e757600080fd5b505af11580156123fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061241f9190810190613bfc565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561248557600080fd5b505af1158015612499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124bd9190810190613b81565b91508173ffffffffffffffffffffffffffffffffffffffff16633249273788886040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125169291906141da565b600060405180830381600087803b15801561253057600080fd5b505af1158015612544573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125d4929190614342565b602060405180830381600087803b1580156125ee57600080fd5b505af1158015612602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126269190810190613baa565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561268c57600080fd5b505af11580156126a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126c49190810190613c25565b60001415612732577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd600060405190808252806020026020018201604052801561272257816020015b606081526020019060019003908161270d5790505b5081915080905094509450612745565b600061273d82612f25565b819150945094505b5050509250929050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128019190614320565b602060405180830381600087803b15801561281b57600080fd5b505af115801561282f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128539190810190613bfc565b91508173ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f303033000000000000000000000000000000000000000000008152508473ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561290b57600080fd5b505af115801561291f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129439190810190613b81565b6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161297c929190614342565b602060405180830381600087803b15801561299657600080fd5b505af11580156129aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129ce9190810190613baa565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612a3457600080fd5b505af1158015612a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a6c9190810190613c25565b60001415612ada577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd6000604051908082528060200260200182016040528015612aca57816020015b6060815260200190600190039081612ab55790505b5081915080905093509350612aed565b6000612ae582612f25565b819150935093505b50509091565b6000606060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601a81526020017f646174615f7365745f6d656d6265725f7065726d697373696f6e0000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612ba79190614320565b602060405180830381600087803b158015612bc157600080fd5b505af1158015612bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612bf99190810190613bfc565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612c5f57600080fd5b505af1158015612c73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612c979190810190613b81565b91508173ffffffffffffffffffffffffffffffffffffffff", "1663ae763db5876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612cee91906145a2565b600060405180830381600087803b158015612d0857600080fd5b505af1158015612d1c573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f30303300000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612dac929190614342565b602060405180830381600087803b158015612dc657600080fd5b505af1158015612dda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612dfe9190810190613baa565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612e6457600080fd5b505af1158015612e78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e9c9190810190613c25565b60001415612f0a577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd6000604051908082528060200260200182016040528015612efa57816020015b6060815260200190600190039081612ee55790505b5081915080905094509450612f1d565b6000612f1582612f25565b819150945094505b505050915091565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612f9157600080fd5b505af1158015612fa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612fc99190810190613c25565b604051908082528060200260200182016040528015612ffc57816020015b6060815260200190600190039081612fe75790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561306857600080fd5b505af115801561307c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130a09190810190613c25565b83121561381c578573ffffffffffffffffffffffffffffffffffffffff16633dd2b614846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016130fc919061418f565b602060405180830381600087803b15801561311657600080fd5b505af115801561312a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061314e9190810190613bd3565b91506132406132058373ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016131a990614582565b600060405180830381600087803b1580156131c357600080fd5b505af11580156131d7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506132009190810190613ccb565b613828565b6040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613881565b90506132fd816132f88473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161329c906143e0565b600060405180830381600087803b1580156132b657600080fd5b505af11580156132ca573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506132f39190810190613ccb565b613828565b613881565b905061333e816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613881565b90506133fb816133f68473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161339a9061448a565b600060405180830381600087803b1580156133b457600080fd5b505af11580156133c8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506133f19190810190613ccb565b613828565b613881565b905061343c816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613881565b90506134f9816134f48473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401613498906144df565b600060405180830381600087803b1580156134b257600080fd5b505af11580156134c6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506134ef9190810190613ccb565b613828565b613881565b905061353a816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613881565b90506135f7816135f28473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161359690614435565b600060405180830381600087803b1580156135b057600080fd5b505af11580156135c4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506135ed9190810190613ccb565b613828565b613881565b9050613638816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613881565b90506136f5816136f08473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161369490614534565b600060405180830381600087803b1580156136ae57600080fd5b505af11580156136c2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506136eb9190810190613ccb565b613828565b613881565b9050613736816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250613881565b90506137f3816137ee8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016137929061460c565b600060405180830381600087803b1580156137ac57600080fd5b505af11580156137c0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506137e99190810190613ccb565b613828565b613881565b905080848481518110151561380457fe5b90602001906020020181905250826001019250613004565b83945050505050919050565b6060600061383583613a52565b1415613878576040805190810160405280600181526020017f2000000000000000000000000000000000000000000000000000000000000000815250905061387c565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f1916602001820160405280156138c95781602001602082028038833980820191505090505b50935083925060009150600090505b855181101561398b5785818151811015156138ef57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561394e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506138d8565b600090505b8451811015613a435784818151811015156139a757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515613a0657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613990565b83965050505050505092915050565b600081519050919050565b6000613a69825161472b565b905092915050565b6000613a7d825161473d565b905092915050565b6000613a91825161474f565b905092915050565b6000613aa58251614761565b905092915050565b6000613ab98235614773565b905092915050565b6000613acd8251614773565b905092915050565b600082601f8301121515613ae857600080fd5b8135613afb613af68261468e565b614661565b91508082526020830160208301858383011115613b1757600080fd5b613b228382846147a1565b50505092915050565b600082601f8301121515613b3e57600080fd5b8151613b51613b4c8261468e565b614661565b91508082526020830160208301858383011115613b6d57600080fd5b613b788382846147b0565b50505092915050565b600060208284031215613b9357600080fd5b6000613ba184828501613a5d565b91505092915050565b600060208284031215613bbc57600080fd5b6000613bca84828501613a71565b91505092915050565b600060208284031215613be557600080fd5b6000613bf384828501613a85565b91505092915050565b600060208284031215613c0e57600080fd5b6000613c1c84828501613a99565b91505092915050565b600060208284031215613c3757600080fd5b6000613c4584828501613ac1565b91505092915050565b60008060408385031215613c6157600080fd5b6000613c6f85828601613aad565b9250506020613c8085828601613aad565b9150509250929050565b600060208284031215613c9c57600080fd5b600082013567ffffffffffffffff811115613c", "b657600080fd5b613cc284828501613ad5565b91505092915050565b600060208284031215613cdd57600080fd5b600082015167ffffffffffffffff811115613cf757600080fd5b613d0384828501613b2b565b91505092915050565b60008060408385031215613d1f57600080fd5b600083013567ffffffffffffffff811115613d3957600080fd5b613d4585828601613ad5565b925050602083013567ffffffffffffffff811115613d6257600080fd5b613d6e85828601613ad5565b9150509250929050565b600080600080600080600060e0888a031215613d9357600080fd5b600088013567ffffffffffffffff811115613dad57600080fd5b613db98a828b01613ad5565b975050602088013567ffffffffffffffff811115613dd657600080fd5b613de28a828b01613ad5565b965050604088013567ffffffffffffffff811115613dff57600080fd5b613e0b8a828b01613ad5565b955050606088013567ffffffffffffffff811115613e2857600080fd5b613e348a828b01613ad5565b945050608088013567ffffffffffffffff811115613e5157600080fd5b613e5d8a828b01613ad5565b93505060a0613e6e8a828b01613aad565b92505060c088013567ffffffffffffffff811115613e8b57600080fd5b613e978a828b01613ad5565b91505092959891949750929550565b6000613eb1826146c7565b80845260208401935083602082028501613eca856146ba565b60005b84811015613f03578383038852613ee5838351613f86565b9250613ef0826146e8565b9150602088019750600181019050613ecd565b508196508694505050505092915050565b613f1d81614715565b82525050565b613f2c8161477d565b82525050565b613f3b8161478f565b82525050565b613f4a81614721565b82525050565b6000613f5b826146dd565b808452613f6f8160208601602086016147b0565b613f78816147e3565b602085010191505092915050565b6000613f91826146d2565b808452613fa58160208601602086016147b0565b613fae816147e3565b602085010191505092915050565b6000600b82527f646174615f7365745f69640000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600982527f6d656d6265725f696400000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6c6f675f74696d650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600282527f69640000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b60006020820190506141896000830184613f14565b92915050565b60006020820190506141a46000830184613f41565b92915050565b60006040820190506141bf6000830185613f41565b81810360208301526141d18184613ea6565b90509392505050565b60006040820190506141ef6000830185613f41565b6141fc6020830184613f41565b9392505050565b60006040820190506142186000830185613f41565b818103602083015261422a8184613f50565b90509392505050565b60006060820190506142486000830186613f41565b818103602083015261425a8185613f50565b9050818103604083015261426e8184613f50565b9050949350505050565b60006101008201905061428e600083018b613f41565b81810360208301526142a0818a613f50565b905081810360408301526142b48189613f50565b905081810360608301526142c88188613f50565b905081810360808301526142dc8187613f50565b905081810360a08301526142f08186613f50565b90506142ff60c0830185613f41565b81810360e08301526143118184613f50565b90509998505050505050505050565b6000602082019050818103600083015261433a8184613f86565b905092915050565b6000604082019050818103600083015261435c8185613f86565b905061436b6020830184613f23565b9392505050565b6000604082019050818103600083015261438c8185613f86565b905061439b6020830184613f32565b9392505050565b600060608201905081810360008301526143bc8186613f86565b90506143cb6020830185613f32565b6143d86040830184613f23565b949350505050565b600060208201905081810360008301526143f981613fbc565b9050919050565b6000604082019050818103600083015261441981613fbc565b9050818103602083015261442d8184613f50565b905092915050565b6000602082019050818103600083015261444e81613ff3565b9050919050565b6000604082019050818103600083015261446e81613ff3565b905081810360208301526144828184613f50565b905092915050565b600060208201905081810360008301526144a38161402a565b9050919050565b600060408201905081810360008301526144c38161402a565b905081810360208301526144d78184613f50565b905092915050565b600060208201905081810360008301526144f881614061565b9050919050565b6000604082019050818103600083015261451881614061565b9050818103602083015261452c8184613f50565b905092915050565b6000602082019050818103600083015261454d81614098565b9050919050565b6000604082019050818103600083015261456d81614098565b905061457c6020830184613f41565b92915050565b6000602082019050818103600083015261459b816140cf565b9050919050565b600060408201905081810360008301526145bb816140cf565b905081810360208301526145cf8184613f50565b905092915050565b600060408201905081810360008301526145f081614106565b905081810360208301526146048184613f86565b905092915050565b600060208201905081810360008301526146258161413d565b9050919050565b600060408201905081810360008301526146458161413d565b905081810360208301526146598184613f50565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561468457600080fd5b8060405250919050565b600067ffffffffffffffff8211156146a557600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000614736826146f5565b9050919050565b6000614748826146f5565b9050919050565b600061475a826146f5565b9050919050565b600061476c826146f5565b9050919050565b6000819050919050565b6000614788826146f5565b9050919050565b600061479a826146f5565b9050919050565b82818337600083830152505050565b60005b838110156147ce5780820151818401526020810190506147b3565b838111156147dd576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820c3c3927ebcbb2a713ca5ea5b5d30e1efaee9e8e0f2be894309c16fde8175f9506c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[{\"name\":\"member_id\",\"type\":\"string\"}],\"name\":\"selectByMemberId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data_set_id\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"updateExtJson\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"selectById\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"isExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"startIndex\",\"type\":\"int256\"},{\"name\":\"endIndex\",\"type\":\"int256\"}],\"name\":\"selectByPage\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selectAll\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"data_set_id\",\"type\":\"string\"},{\"name\":\"member_id\",\"type\":\"string\"},{\"name\":\"created_time\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"},{\"name\":\"log_time\",\"type\":\"int256\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"data_set_id\",\"type\":\"string\"},{\"name\":\"member_id\",\"type\":\"string\"},{\"name\":\"created_time\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"},{\"name\":\"log_time\",\"type\":\"int256\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data_set_id\",\"type\":\"string\"}],\"name\":\"deleteByDataSetId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"data_set_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"member_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"created_time\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"log_time\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insertEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"data_set_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"member_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"created_time\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"log_time\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"updateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"data_set_id\",\"type\":\"string\"}],\"name\":\"deleteByDataSetIdEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"data_set_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"updateExtJsonEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_SELECTBYMEMBERID = "selectByMemberId";

    public static final String FUNC_UPDATEEXTJSON = "updateExtJson";

    public static final String FUNC_SELECTBYID = "selectById";

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_SELECTBYPAGE = "selectByPage";

    public static final String FUNC_SELECTALL = "selectAll";

    public static final String FUNC_UPDATE = "update";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_DELETEBYDATASETID = "deleteByDataSetId";

    public static final Event INSERTEVENT_EVENT = new Event("insertEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEVENT_EVENT = new Event("updateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event DELETEBYDATASETIDEVENT_EVENT = new Event("deleteByDataSetIdEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEXTJSONEVENT_EVENT = new Event("updateExtJsonEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected DataSetMemberPermissionContract(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public Tuple2<BigInteger, List<String>> selectByMemberId(String member_id) throws ContractException {
        final Function function = new Function(FUNC_SELECTBYMEMBERID, 
                Arrays.<Type>asList(new Utf8String(member_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public TransactionReceipt updateExtJson(String data_set_id, String ext_json) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(data_set_id),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateExtJson(String data_set_id, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(data_set_id),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateExtJson(String data_set_id, String ext_json) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(data_set_id),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, String> getUpdateExtJsonInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateExtJsonOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple2<BigInteger, List<String>> selectById(String id) throws ContractException {
        final Function function = new Function(FUNC_SELECTBYID, 
                Arrays.<Type>asList(new Utf8String(id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public Boolean isExist(String id) throws ContractException {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new Utf8String(id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public Tuple2<BigInteger, List<String>> selectByPage(BigInteger startIndex, BigInteger endIndex) throws ContractException {
        final Function function = new Function(FUNC_SELECTBYPAGE, 
                Arrays.<Type>asList(new Int256(startIndex),
                new Int256(endIndex)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public Tuple2<BigInteger, List<String>> selectAll() throws ContractException {
        final Function function = new Function(FUNC_SELECTALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public TransactionReceipt update(String id, String data_set_id, String member_id, String created_time, String updated_time, BigInteger log_time, String ext_json) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(data_set_id),
                new Utf8String(member_id),
                new Utf8String(created_time),
                new Utf8String(updated_time),
                new Int256(log_time),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void update(String id, String data_set_id, String member_id, String created_time, String updated_time, BigInteger log_time, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(data_set_id),
                new Utf8String(member_id),
                new Utf8String(created_time),
                new Utf8String(updated_time),
                new Int256(log_time),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdate(String id, String data_set_id, String member_id, String created_time, String updated_time, BigInteger log_time, String ext_json) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(data_set_id),
                new Utf8String(member_id),
                new Utf8String(created_time),
                new Utf8String(updated_time),
                new Int256(log_time),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple7<String, String, String, String, String, BigInteger, String> getUpdateInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple7<String, String, String, String, String, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (String) results.get(6).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt insert(String id, String data_set_id, String member_id, String created_time, String updated_time, BigInteger log_time, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(data_set_id),
                new Utf8String(member_id),
                new Utf8String(created_time),
                new Utf8String(updated_time),
                new Int256(log_time),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(String id, String data_set_id, String member_id, String created_time, String updated_time, BigInteger log_time, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(data_set_id),
                new Utf8String(member_id),
                new Utf8String(created_time),
                new Utf8String(updated_time),
                new Int256(log_time),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(String id, String data_set_id, String member_id, String created_time, String updated_time, BigInteger log_time, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(data_set_id),
                new Utf8String(member_id),
                new Utf8String(created_time),
                new Utf8String(updated_time),
                new Int256(log_time),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple7<String, String, String, String, String, BigInteger, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple7<String, String, String, String, String, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (String) results.get(6).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt deleteByDataSetId(String data_set_id) {
        final Function function = new Function(
                FUNC_DELETEBYDATASETID, 
                Arrays.<Type>asList(new Utf8String(data_set_id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void deleteByDataSetId(String data_set_id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETEBYDATASETID, 
                Arrays.<Type>asList(new Utf8String(data_set_id)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteByDataSetId(String data_set_id) {
        final Function function = new Function(
                FUNC_DELETEBYDATASETID, 
                Arrays.<Type>asList(new Utf8String(data_set_id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getDeleteByDataSetIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETEBYDATASETID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<BigInteger> getDeleteByDataSetIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_DELETEBYDATASETID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertEventEventResponse> getInsertEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTEVENT_EVENT, transactionReceipt);
        ArrayList<InsertEventEventResponse> responses = new ArrayList<InsertEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertEventEventResponse typedResponse = new InsertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.data_set_id = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.member_id = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.created_time = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse.log_time = (BigInteger) eventValues.getNonIndexedValues().get(6).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(7).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateEventEventResponse> getUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateEventEventResponse> responses = new ArrayList<UpdateEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateEventEventResponse typedResponse = new UpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.data_set_id = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.member_id = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.created_time = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse.log_time = (BigInteger) eventValues.getNonIndexedValues().get(6).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(7).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<DeleteByDataSetIdEventEventResponse> getDeleteByDataSetIdEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEBYDATASETIDEVENT_EVENT, transactionReceipt);
        ArrayList<DeleteByDataSetIdEventEventResponse> responses = new ArrayList<DeleteByDataSetIdEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            DeleteByDataSetIdEventEventResponse typedResponse = new DeleteByDataSetIdEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.data_set_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeDeleteByDataSetIdEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYDATASETIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeDeleteByDataSetIdEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYDATASETIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateExtJsonEventEventResponse> getUpdateExtJsonEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEXTJSONEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateExtJsonEventEventResponse> responses = new ArrayList<UpdateExtJsonEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateExtJsonEventEventResponse typedResponse = new UpdateExtJsonEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.data_set_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateExtJsonEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateExtJsonEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static DataSetMemberPermissionContract load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new DataSetMemberPermissionContract(contractAddress, client, credential);
    }

    public static DataSetMemberPermissionContract deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(DataSetMemberPermissionContract.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String id;

        public String data_set_id;

        public String member_id;

        public String created_time;

        public String updated_time;

        public BigInteger log_time;

        public String ext_json;
    }

    public static class UpdateEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String id;

        public String data_set_id;

        public String member_id;

        public String created_time;

        public String updated_time;

        public BigInteger log_time;

        public String ext_json;
    }

    public static class DeleteByDataSetIdEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String data_set_id;
    }

    public static class UpdateExtJsonEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String data_set_id;

        public String ext_json;
    }
}
