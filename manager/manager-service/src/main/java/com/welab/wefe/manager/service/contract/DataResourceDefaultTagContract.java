/*
 * Copyright 2021 Tianmian Tech. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.welab.wefe.manager.service.contract;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple4;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class DataResourceDefaultTagContract extends Contract {
    public static final String[] BINARY_ARRAY = {"","505050506040513d601f19601f82011682018060405250610cd39190810190612e2f565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d3957600080fd5b505af1158015610d4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d719190810190612db4565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610dc891906137f5565b600060405180830381600087803b158015610de257600080fd5b505af1158015610df6573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166328bb21176040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f74616700000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e869291906134ba565b602060405180830381600087803b158015610ea057600080fd5b505af1158015610eb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ed89190810190612e58565b9050600181121515610eed5760009350610f11565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5b67fcfc52bf8293823b40863b3cf1890e73d0eae2e12fd2eada0bcc37ce68f38487604051610f4292919061339f565b60405180910390a18394505b50505050919050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f746167000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110099190613498565b602060405180830381600087803b15801561102357600080fd5b505af1158015611037573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061105b9190810190612e2f565b91508173ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f746167000000000000008152508473ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561111357600080fd5b505af1158015611127573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061114b9190810190612db4565b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111849291906134ba565b602060405180830381600087803b15801561119e57600080fd5b505af11580156111b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111d69190810190612ddd565b90508073ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561123c57600080fd5b505af1158015611250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112749190810190612e58565b600014156112e2577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60006040519080825280602002602001820160405280156112d257816020015b60608152602001906001900390816112bd5790505b50819150809050935093506112f5565b60006112ed82612132565b819150935093505b50509091565b600080600080600080935061132787600081518110151561131857fe5b906020019060200201516101da565b15611392577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f8488886040516113829392919061335a565b60405180910390a1839450611ae2565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f746167000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161143d9190613498565b602060405180830381600087803b15801561145757600080fd5b505af115801561146b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061148f9190810190612e2f565b92508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156114f557600080fd5b505af1158015611509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061152d9190810190612e06565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f746167000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115b991906135ad565b600060405180830381600087803b1580156115d357600080fd5b505af11580156115e7573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600081518110151561161657fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161165891906137c0565b600060405180830381600087803b15801561167257600080fd5b505af1158015611686573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168860018151811015156116b557fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116f79190613602565b600060405180830381600087803b15801561171157600080fd5b505af1158015611725573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600281518110151561175457fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611796919061376b565b600060405180830381600087803b1580156117b057600080fd5b505af11580156117c4573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168860038151811015156117f357fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118359190613716565b600060405180830381600087803b15801561184f57600080fd5b505af1158015611863573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600481518110151561189257fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118d4919061368c565b600060405180830381600087803b1580156118ee57600080fd5b505af1158015611902573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161195b9190613578565b600060405180830381600087803b15801561197557600080fd5b505af1158015611989573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166331afac366040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f74616700000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a199291906134ea565b602060405180830381600087803b158015611a3357600080fd5b505af1158015611a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a6b9190810190612e58565b90506001811415611a7f5760009350611aa3565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f848888604051611ad69392919061335a565b60405180910390a18394505b5050505092915050565b60008060008060008060009450611b028a6101da565b1515611b72577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd94507f8718faa5c5c2bb075c6af3f223c80ed4c4632bd62204f0cbfdfb360b366ee20c858b8b8b8b604051611b62959493929190613429565b60405180910390a1849550612125565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f746167000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c1d9190613498565b602060405180830381600087803b158015611c3757600080fd5b505af1158015611c4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c6f9190810190612e2f565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000","","8135612cc2612cbd826138ab565b61382a565b91508082526020830160208301858383011115612cde57600080fd5b612ce98382846139be565b50505092915050565b600082601f8301121515612d0557600080fd5b8151612d18612d13826138ab565b61382a565b91508082526020830160208301858383011115612d3457600080fd5b612d3f8382846139cd565b50505092915050565b60008060408385031215612d5b57600080fd5b600083013567ffffffffffffffff811115612d7557600080fd5b612d8185828601612b6c565b925050602083013567ffffffffffffffff811115612d9e57600080fd5b612daa85828601612c9c565b9150509250929050565b600060208284031215612dc657600080fd5b6000612dd484828501612be2565b91505092915050565b600060208284031215612def57600080fd5b6000612dfd84828501612bf6565b91505092915050565b600060208284031215612e1857600080fd5b6000612e2684828501612c0a565b91505092915050565b600060208284031215612e4157600080fd5b6000612e4f84828501612c1e565b91505092915050565b600060208284031215612e6a57600080fd5b6000612e7884828501612c32565b91505092915050565b600060208284031215612e9357600080fd5b600082013567ffffffffffffffff811115612ead57600080fd5b612eb984828501612c9c565b91505092915050565b600060208284031215612ed457600080fd5b600082015167ffffffffffffffff811115612eee57600080fd5b612efa84828501612cf2565b91505092915050565b600080600060608486031215612f1857600080fd5b600084013567ffffffffffffffff811115612f3257600080fd5b612f3e86828701612c9c565b935050602084013567ffffffffffffffff811115612f5b57600080fd5b612f6786828701612c9c565b925050604084013567ffffffffffffffff811115612f8457600080fd5b612f9086828701612c9c565b9150509250925092565b60008060008060808587031215612fb057600080fd5b600085013567ffffffffffffffff811115612fca57600080fd5b612fd687828801612c9c565b945050602085013567ffffffffffffffff811115612ff357600080fd5b612fff87828801612c9c565b935050604085013567ffffffffffffffff81111561301c57600080fd5b61302887828801612c9c565b925050606085013567ffffffffffffffff81111561304557600080fd5b61305187828801612c9c565b91505092959194509250565b6000613068826138e4565b80845260208401935083602082028501613081856138d7565b60005b848110156130ba57838303885261309c83835161313d565b92506130a782613905565b9150602088019750600181019050613084565b508196508694505050505092915050565b6130d481613932565b82525050565b6130e38161399a565b82525050565b6130f2816139ac565b82525050565b6131018161393e565b82525050565b6000613112826138fa565b8084526131268160208601602086016139cd565b61312f81613a00565b602085010191505092915050565b6000613148826138ef565b80845261315c8160208601602086016139cd565b61316581613a00565b602085010191505092915050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f7461675f6e616d650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000601282527f646174615f7265736f757263655f7479706500000000000000000000000000006020830152604082019050919050565b6000600682527f7461675f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b600060208201905061330960008301846130cb565b92915050565b600060208201905061332460008301846130f8565b92915050565b600060408201905061333f60008301856130f8565b8181036020830152613351818461305d565b90509392505050565b600060608201905061336f60008301866130f8565b8181036020830152613381818561305d565b905081810360408301526133958184613107565b9050949350505050565b60006040820190506133b460008301856130f8565b81810360208301526133c68184613107565b90509392505050565b60006080820190506133e460008301876130f8565b81810360208301526133f68186613107565b9050818103604083015261340a8185613107565b9050818103606083015261341e8184613107565b905095945050505050565b600060a08201905061343e60008301886130f8565b81810360208301526134508187613107565b905081810360408301526134648186613107565b905081810360608301526134788185613107565b9050818103608083015261348c8184613107565b90509695505050505050565b600060208201905081810360008301526134b2818461313d565b905092915050565b600060408201905081810360008301526134d4818561313d565b90506134e360208301846130da565b9392505050565b60006040820190508181036000830152613504818561313d565b905061351360208301846130e9565b9392505050565b60006060820190508181036000830152613534818661313d565b905061354360208301856130e9565b61355060408301846130da565b949350505050565b6000602082019050818103600083015261357181613173565b9050919050565b6000604082019050818103600083015261359181613173565b905081810360208301526135a58184613107565b905092915050565b600060408201905081810360008301526135c6816131aa565b905081810360208301526135da818461313d565b905092915050565b600060208201905081810360008301526135fb816131e1565b9050919050565b6000604082019050818103600083015261361b816131e1565b9050818103602083015261362f818461313d565b905092915050565b60006040820190508181036000830152613650816131e1565b905081810360208301526136648184613107565b905092915050565b6000602082019050818103600083015261368581613218565b9050919050565b600060408201905081810360008301526136a581613218565b905081810360208301526136b9818461313d565b905092915050565b600060408201905081810360008301526136da81613218565b905081810360208301526136ee8184613107565b905092915050565b6000602082019050818103600083015261370f8161324f565b9050919050565b6000604082019050818103600083015261372f8161324f565b90508181036020830152613743818461313d565b905092915050565b6000602082019050818103600083015261376481613286565b9050919050565b6000604082019050818103600083015261378481613286565b90508181036020830152613798818461313d565b905092915050565b600060208201905081810360008301526137b9816132bd565b9050919050565b600060408201905081810360008301526137d9816132bd565b905081810360208301526137ed818461313d565b905092915050565b6000604082019050818103600083015261380e816132bd565b905081810360208301526138228184613107565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561384d57600080fd5b8060405250919050565b600067ffffffffffffffff82111561386e57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561389657600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156138c257600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600061395382613912565b9050919050565b600061396582613912565b9050919050565b600061397782613912565b9050919050565b600061398982613912565b9050919050565b6000819050919050565b60006139a582613912565b9050919050565b60006139b782613912565b9050919050565b82818337600083830152505050565b60005b838110156139eb5780820151818401526020810190506139d0565b838111156139fa576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a7230582006b92710a146f6f123b95dfb550ab32b337f48779f15a7599f93406a0dea09236c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","600080fd5b505af1158015610cc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cec9190810190612e2f565b92508273ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d5257600080fd5b505af1158015610d66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d8a9190810190612e06565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb46040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f746167000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e1691906137a0565b600060405180830381600087803b158015610e3057600080fd5b505af1158015610e44573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886000815181101515610e7357fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610eb59190613736565b600060405180830381600087803b158015610ecf57600080fd5b505af1158015610ee3573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886001815181101515610f1257fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f549190613602565b600060405180830381600087803b158015610f6e57600080fd5b505af1158015610f82573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886002815181101515610fb157fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ff391906136e1565b600060405180830381600087803b15801561100d57600080fd5b505af1158015611021573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600381518110151561105057fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611092919061368c565b600060405180830381600087803b1580156110ac57600080fd5b505af11580156110c0573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48860048151811015156110ef57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111319190613578565b600060405180830381600087803b15801561114b57600080fd5b505af115801561115f573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111b891906137f5565b600060405180830381600087803b1580156111d257600080fd5b505af11580156111e6573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f74616700000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112769291906134ea565b602060405180830381600087803b15801561129057600080fd5b505af11580156112a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112c89190810190612e58565b905060018114156112dc5760009350611300565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f8488886040516113339392919061335a565b60405180910390a18394505b5050505092915050565b600080600080600080935061135d86610794565b15156113c7577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd93507f5d528ae6f2f8bddbfc139090621683e2eaefebbd3654e1db601848d2581a193b84876040516113b792919061339f565b60405180910390a183945061173f565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f746167000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114729190613498565b602060405180830381600087803b15801561148c57600080fd5b505af11580156114a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114c49190810190612e2f565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561152a57600080fd5b505af115801561153e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115629190810190612db4565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115b9919061376b565b600060405180830381600087803b1580156115d357600080fd5b505af11580156115e7573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166309ff42f06040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f74616700000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116779291906134ba565b602060405180830381600087803b15801561169157600080fd5b505af11580156116a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116c99190810190612e58565b90506001811215156116de5760009350611702565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5d528ae6f2f8bddbfc139090621683e2eaefebbd3654e1db601848d2581a193b848760405161173392919061339f565b60405180910390a18394505b50505050919050565b6000806000806000806000945061175e8a610794565b15156117ce577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd94507fcec28b4baf7cc2a7ed2fc9d09086089702d907240b080f609acb60309a914084858b8b8b8b6040516117be959493929190613429565b60405180910390a1849550611d81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f746167000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118799190613498565b602060405180830381600087803b15801561189357600080fd5b505af11580156118a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118cb9190810190612e2f565b93508373ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561193157600080fd5b505af1158015611945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119699190810190612db4565b92508273ffffffffffffffffffffffffffffffffffffffff1663ae763db58b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016119c0919061376b565b600060405180830381600087803b1580156119da57600080fd5b505af11580156119ee573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611a5657600080fd5b505af1158015611a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a8e9190810190612e06565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ae59190613637565b600060405180830381600087803b158015611aff57600080fd5b505af1158015611b13573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b6c91906135ad565b600060405180830381600087803b158015611b8657600080fd5b505af1158015611b9a573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bf391906137f5565b600060405180830381600087803b158015611c0d57600080fd5b505af1158015611c21573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663664b37d66040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f7461670000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611cb39392919061","351a565b602060405180830381600087803b158015611ccd57600080fd5b505af1158015611ce1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d059190810190612e58565b9050600181121515611d1a5760009450611d3e565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7fcec28b4baf7cc2a7ed2fc9d09086089702d907240b080f609acb60309a914084858b8b8b8b604051611d75959493929190613429565b60405180910390a18495505b5050505050949350505050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f746167000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e409190613498565b602060405180830381600087803b158015611e5a57600080fd5b505af1158015611e6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e929190810190612e2f565b91508173ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280601981526020017f646174615f7265736f757263655f64656661756c745f746167000000000000008152508473ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611f4a57600080fd5b505af1158015611f5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f829190810190612db4565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611fbb9291906134ba565b602060405180830381600087803b158015611fd557600080fd5b505af1158015611fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061200d9190810190612ddd565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561207357600080fd5b505af1158015612087573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120ab9190810190612e58565b60001415612119577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd600060405190808252806020026020018201604052801561210957816020015b60608152602001906001900390816120f45790505b508191508090509350935061212c565b600061212482612132565b819150935093505b50509091565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561219e57600080fd5b505af11580156121b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121d69190810190612e58565b60405190808252806020026020018201604052801561220957816020015b60608152602001906001900390816121f45790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561227557600080fd5b505af1158015612289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122ad9190810190612e58565b83121561292b578573ffffffffffffffffffffffffffffffffffffffff16633dd2b614846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612309919061330f565b602060405180830381600087803b15801561232357600080fd5b505af1158015612337573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061235b9190810190612e06565b915061244d6124128373ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123b690613716565b600060405180830381600087803b1580156123d057600080fd5b505af11580156123e4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061240d9190810190612ec2565b612937565b6040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612990565b905061250a816125058473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016124a9906135e2565b600060405180830381600087803b1580156124c357600080fd5b505af11580156124d7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506125009190810190612ec2565b612937565b612990565b905061254b816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612990565b9050612608816126038473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125a7906136c1565b600060405180830381600087803b1580156125c157600080fd5b505af11580156125d5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506125fe9190810190612ec2565b612937565b612990565b9050612649816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612990565b9050612706816127018473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016126a59061366c565b600060405180830381600087803b1580156126bf57600080fd5b505af11580156126d3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506126fc9190810190612ec2565b612937565b612990565b9050612747816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612990565b9050612804816127ff8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127a390613558565b600060405180830381600087803b1580156127bd57600080fd5b505af11580156127d1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506127fa9190810190612ec2565b612937565b612990565b9050612845816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612990565b9050612902816128fd8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128a1906137d5565b600060405180830381600087803b1580156128bb57600080fd5b505af11580156128cf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506128f89190810190612ec2565b612937565b612990565b905080848481518110151561291357fe5b90602001906020020181905250826001019250612211565b83945050505050919050565b6060600061294483612b61565b1415612987576040805190810160405280600181526020017f2000000000000000000000000000000000000000000000000000000000000000815250905061298b565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f1916602001820160405280156129d85781602001602082028038833980820191505090505b50935083925060009150600090505b8551811015612a9a5785818151811015156129fe57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612a5d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506129e7565b600090505b8451811015612b52578481815181101515612ab657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612b1557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612a9f565b83965050505050505092915050565b600081519050919050565b600082601f8301121515612b7f57600080fd5b8135612b92612b8d82613857565b61382a565b9150818183526020840193506020810190508360005b83811015612bd85781358601612bbe8882612c46565b845260208401935060208301925050600181019050612ba8565b5050505092915050565b6000612bee8251613948565b905092915050565b6000612c02825161395a565b905092915050565b6000612c16825161396c565b905092915050565b6000612c2a825161397e565b905092915050565b6000612c3e8251613990565b905092915050565b600082601f8301121515612c5957600080fd5b8135612c6c612c678261387f565b61382a565b91508082526020830160208301858383011115612c8857600080fd5b612c938382846139be565b50505092915050565b600082601f8301121515612caf57600080fd5b","8135612cc2612cbd826138ab565b61382a565b91508082526020830160208301858383011115612cde57600080fd5b612ce98382846139be565b50505092915050565b600082601f8301121515612d0557600080fd5b8151612d18612d13826138ab565b61382a565b91508082526020830160208301858383011115612d3457600080fd5b612d3f8382846139cd565b50505092915050565b60008060408385031215612d5b57600080fd5b600083013567ffffffffffffffff811115612d7557600080fd5b612d8185828601612b6c565b925050602083013567ffffffffffffffff811115612d9e57600080fd5b612daa85828601612c9c565b9150509250929050565b600060208284031215612dc657600080fd5b6000612dd484828501612be2565b91505092915050565b600060208284031215612def57600080fd5b6000612dfd84828501612bf6565b91505092915050565b600060208284031215612e1857600080fd5b6000612e2684828501612c0a565b91505092915050565b600060208284031215612e4157600080fd5b6000612e4f84828501612c1e565b91505092915050565b600060208284031215612e6a57600080fd5b6000612e7884828501612c32565b91505092915050565b600060208284031215612e9357600080fd5b600082013567ffffffffffffffff811115612ead57600080fd5b612eb984828501612c9c565b91505092915050565b600060208284031215612ed457600080fd5b600082015167ffffffffffffffff811115612eee57600080fd5b612efa84828501612cf2565b91505092915050565b600080600060608486031215612f1857600080fd5b600084013567ffffffffffffffff811115612f3257600080fd5b612f3e86828701612c9c565b935050602084013567ffffffffffffffff811115612f5b57600080fd5b612f6786828701612c9c565b925050604084013567ffffffffffffffff811115612f8457600080fd5b612f9086828701612c9c565b9150509250925092565b60008060008060808587031215612fb057600080fd5b600085013567ffffffffffffffff811115612fca57600080fd5b612fd687828801612c9c565b945050602085013567ffffffffffffffff811115612ff357600080fd5b612fff87828801612c9c565b935050604085013567ffffffffffffffff81111561301c57600080fd5b61302887828801612c9c565b925050606085013567ffffffffffffffff81111561304557600080fd5b61305187828801612c9c565b91505092959194509250565b6000613068826138e4565b80845260208401935083602082028501613081856138d7565b60005b848110156130ba57838303885261309c83835161313d565b92506130a782613905565b9150602088019750600181019050613084565b508196508694505050505092915050565b6130d481613932565b82525050565b6130e38161399a565b82525050565b6130f2816139ac565b82525050565b6131018161393e565b82525050565b6000613112826138fa565b8084526131268160208601602086016139cd565b61312f81613a00565b602085010191505092915050565b6000613148826138ef565b80845261315c8160208601602086016139cd565b61316581613a00565b602085010191505092915050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f7461675f6e616d650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000601282527f646174615f7265736f757263655f7479706500000000000000000000000000006020830152604082019050919050565b6000600682527f7461675f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b600060208201905061330960008301846130cb565b92915050565b600060208201905061332460008301846130f8565b92915050565b600060408201905061333f60008301856130f8565b8181036020830152613351818461305d565b90509392505050565b600060608201905061336f60008301866130f8565b8181036020830152613381818561305d565b905081810360408301526133958184613107565b9050949350505050565b60006040820190506133b460008301856130f8565b81810360208301526133c68184613107565b90509392505050565b60006080820190506133e460008301876130f8565b81810360208301526133f68186613107565b9050818103604083015261340a8185613107565b9050818103606083015261341e8184613107565b905095945050505050565b600060a08201905061343e60008301886130f8565b81810360208301526134508187613107565b905081810360408301526134648186613107565b905081810360608301526134788185613107565b9050818103608083015261348c8184613107565b90509695505050505050565b600060208201905081810360008301526134b2818461313d565b905092915050565b600060408201905081810360008301526134d4818561313d565b90506134e360208301846130da565b9392505050565b60006040820190508181036000830152613504818561313d565b905061351360208301846130e9565b9392505050565b60006060820190508181036000830152613534818661313d565b905061354360208301856130e9565b61355060408301846130da565b949350505050565b6000602082019050818103600083015261357181613173565b9050919050565b6000604082019050818103600083015261359181613173565b905081810360208301526135a5818461313d565b905092915050565b600060408201905081810360008301526135c681613173565b905081810360208301526135da8184613107565b905092915050565b600060208201905081810360008301526135fb816131aa565b9050919050565b6000604082019050818103600083015261361b816131aa565b9050818103602083015261362f818461313d565b905092915050565b60006040820190508181036000830152613650816131aa565b905081810360208301526136648184613107565b905092915050565b60006020820190508181036000830152613685816131e1565b9050919050565b600060408201905081810360008301526136a5816131e1565b905081810360208301526136b9818461313d565b905092915050565b600060208201905081810360008301526136da81613218565b9050919050565b600060408201905081810360008301526136fa81613218565b9050818103602083015261370e818461313d565b905092915050565b6000602082019050818103600083015261372f8161324f565b9050919050565b6000604082019050818103600083015261374f8161324f565b90508181036020830152613763818461313d565b905092915050565b600060408201905081810360008301526137848161324f565b905081810360208301526137988184613107565b905092915050565b600060408201905081810360008301526137b981613286565b905081810360208301526137cd818461313d565b905092915050565b600060208201905081810360008301526137ee816132bd565b9050919050565b6000604082019050818103600083015261380e816132bd565b905081810360208301526138228184613107565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561384d57600080fd5b8060405250919050565b600067ffffffffffffffff82111561386e57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561389657600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156138c257600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600061395382613912565b9050919050565b600061396582613912565b9050919050565b600061397782613912565b9050919050565b600061398982613912565b9050919050565b6000819050919050565b60006139a582613912565b9050919050565b60006139b782613912565b9050919050565b82818337600083830152505050565b60005b838110156139eb5780820151818401526020810190506139d0565b838111156139fa576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058205e7854ccefd45a470f3d578afcfeed2313b2b2262d93a9d9f8208664e8d0c2626c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[{\"name\":\"tag_id\",\"type\":\"string\"}],\"name\":\"isExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tag_id\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJson\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tag_id\",\"type\":\"string\"}],\"name\":\"deleteByTagId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selectAll\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"params\",\"type\":\"string[]\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tag_id\",\"type\":\"string\"},{\"name\":\"tag_name\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insertEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"tag_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"tag_name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"tag_id\",\"type\":\"string\"}],\"name\":\"deleteByTagIdEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"tag_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJsonEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_UPDATEEXTJSON = "updateExtJson";

    public static final String FUNC_DELETEBYTAGID = "deleteByTagId";

    public static final String FUNC_SELECTALL = "selectAll";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_UPDATE = "update";

    public static final Event INSERTEVENT_EVENT = new Event("insertEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEVENT_EVENT = new Event("updateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event DELETEBYTAGIDEVENT_EVENT = new Event("deleteByTagIdEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEXTJSONEVENT_EVENT = new Event("updateExtJsonEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected DataResourceDefaultTagContract(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public Boolean isExist(String tag_id) throws ContractException {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new Utf8String(tag_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt updateExtJson(String tag_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateExtJson(String tag_id, String ext_json, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateExtJson(String tag_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateExtJsonInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateExtJsonOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt deleteByTagId(String tag_id) {
        final Function function = new Function(
                FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(new Utf8String(tag_id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void deleteByTagId(String tag_id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(new Utf8String(tag_id)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteByTagId(String tag_id) {
        final Function function = new Function(
                FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(new Utf8String(tag_id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getDeleteByTagIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<BigInteger> getDeleteByTagIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple2<BigInteger, List<String>> selectAll() throws ContractException {
        final Function function = new Function(FUNC_SELECTALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public TransactionReceipt insert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(List<String> params, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<List<String>, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<List<String>, String>(

                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt update(String tag_id, String tag_name, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(tag_name),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void update(String tag_id, String tag_name, String ext_json, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(tag_name),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdate(String tag_id, String tag_name, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(tag_name),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, String, String, String> getUpdateInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertEventEventResponse> getInsertEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTEVENT_EVENT, transactionReceipt);
        ArrayList<InsertEventEventResponse> responses = new ArrayList<InsertEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertEventEventResponse typedResponse = new InsertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateEventEventResponse> getUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateEventEventResponse> responses = new ArrayList<UpdateEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateEventEventResponse typedResponse = new UpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.tag_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.tag_name = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<DeleteByTagIdEventEventResponse> getDeleteByTagIdEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEBYTAGIDEVENT_EVENT, transactionReceipt);
        ArrayList<DeleteByTagIdEventEventResponse> responses = new ArrayList<DeleteByTagIdEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            DeleteByTagIdEventEventResponse typedResponse = new DeleteByTagIdEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.tag_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeDeleteByTagIdEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYTAGIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeDeleteByTagIdEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYTAGIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateExtJsonEventEventResponse> getUpdateExtJsonEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEXTJSONEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateExtJsonEventEventResponse> responses = new ArrayList<UpdateExtJsonEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateExtJsonEventEventResponse typedResponse = new UpdateExtJsonEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.tag_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateExtJsonEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateExtJsonEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static DataResourceDefaultTagContract load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new DataResourceDefaultTagContract(contractAddress, client, credential);
    }

    public static DataResourceDefaultTagContract deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(DataResourceDefaultTagContract.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public List<String> params;

        public String ext_json;
    }

    public static class UpdateEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String tag_id;

        public String tag_name;

        public String ext_json;

        public String updated_time;
    }

    public static class DeleteByTagIdEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String tag_id;
    }

    public static class UpdateExtJsonEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String tag_id;

        public String ext_json;

        public String updated_time;
    }
}
