/*
 * Copyright 2021 Tianmian Tech. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.welab.wefe.manager.service.contract;

import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.*;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple4;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

@SuppressWarnings("unchecked")
public class DataSetDefaultTagContract extends Contract {
    public static final String[] BINARY_ARRAY = {"", "dd9190613500565b600060405180830381600087803b158015610cf757600080fd5b505af1158015610d0b573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166328bb21176040805190810160405280600a81526020017f6669785f69645f30303400000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d9b92919061321a565b602060405180830381600087803b158015610db557600080fd5b505af1158015610dc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ded9190810190612bef565b9050600181121515610e025760009350610e26565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5b67fcfc52bf8293823b40863b3cf1890e73d0eae2e12fd2eada0bcc37ce68f38487604051610e579291906130ff565b60405180910390a180945050505050919050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601481526020017f646174615f7365745f64656661756c745f7461670000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f1d91906131f8565b602060405180830381600087803b158015610f3757600080fd5b505af1158015610f4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f6f9190810190612bc6565b91508173ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600a81526020017f6669785f69645f303034000000000000000000000000000000000000000000008152508473ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561102757600080fd5b505af115801561103b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061105f9190810190612b4b565b6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161109892919061321a565b602060405180830381600087803b1580156110b257600080fd5b505af11580156110c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110ea9190810190612b74565b90508073ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561115057600080fd5b505af1158015611164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111889190810190612bef565b600014156111f6577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60006040519080825280602002602001820160405280156111e657816020015b60608152602001906001900390816111d15790505b5081915080905093509350611209565b600061120182611fc7565b819150935093505b50509091565b600080600080600080935061123b87600081518110151561122c57fe5b906020019060200201516101da565b156112c6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f848888604051611296939291906130ba565b60405180910390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9450611977565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601481526020017f646174615f7365745f64656661756c745f7461670000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161137191906131f8565b602060405180830381600087803b15801561138b57600080fd5b505af115801561139f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113c39190810190612bc6565b92508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561142957600080fd5b505af115801561143d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114619190810190612b9d565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600a81526020017f6669785f69645f303034000000000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114ed919061330d565b600060405180830381600087803b15801561150757600080fd5b505af115801561151b573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600081518110151561154a57fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161158c91906134cb565b600060405180830381600087803b1580156115a657600080fd5b505af11580156115ba573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168860018151811015156115e957fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161162b9190613362565b600060405180830381600087803b15801561164557600080fd5b505af1158015611659573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600281518110151561168857fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116ca9190613476565b600060405180830381600087803b1580156116e457600080fd5b505af11580156116f8573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51688600381518110151561172757fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161176991906133ec565b600060405180830381600087803b15801561178357600080fd5b505af1158015611797573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117f091906132d8565b600060405180830381600087803b15801561180a57600080fd5b505af115801561181e573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166331afac366040805190810160405280600a81526020017f6669785f69645f30303400000000000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118ae92919061324a565b602060405180830381600087803b1580156118c857600080fd5b505af11580156118dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119009190810190612bef565b905060018114156119145760009350611938565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f84888860405161196b939291906130ba565b60405180910390a18094505b5050505092915050565b600080600080600080600094506119978a6101da565b1515611a07577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507f8718faa5c5c2bb075c6af3f223c80ed4c4632bd62204f0cbfdfb360b366ee20c858b8b8b8b6040516119f7959493929190613189565b60405180910390a1849550611fba565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280601481526020017f646174615f7365745f64656661756c745f7461670000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ab291906131f8565b602060405180830381600087803b158015611acc57600080fd5b505af1158015611ae0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b049190810190612bc6565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611b6a57600080fd5b505af1158015611b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ba29190810190612b4b565b92508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bf99190613500565b600060405180830381600087803b158015611c1357600080fd5b505af1158015611c27573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611c8f57600080fd5b505af1158015611ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611cc79190810190612b9d565b91508173ffffffffffffffffffff", "ffffffffffffffffffff1663e942b5168a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d1e9190613397565b600060405180830381600087803b158015611d3857600080fd5b505af1158015611d4c573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611da59190613421565b600060405180830381600087803b158015611dbf57600080fd5b505af1158015611dd3573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e2c91906132d8565b600060405180830381600087803b158015611e4657600080fd5b505af1158015611e5a573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3030340000000000000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611eec9392919061327a565b602060405180830381600087803b158015611f0657600080fd5b505af1158015611f1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f3e9190810190612bef565b9050600181121515611f535760009450611f77565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7f8718faa5c5c2bb075c6af3f223c80ed4c4632bd62204f0cbfdfb360b366ee20c858b8b8b8b604051611fae959493929190613189565b60405180910390a18095505b5050505050949350505050565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561203357600080fd5b505af1158015612047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061206b9190810190612bef565b60405190808252806020026020018201604052801561209e57816020015b60608152602001906001900390816120895790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561210a57600080fd5b505af115801561211e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121429190810190612bef565b8312156126c2578573ffffffffffffffffffffffffffffffffffffffff1663846719e0846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161219e919061306f565b602060405180830381600087803b1580156121b857600080fd5b505af11580156121cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121f09190810190612b9d565b91506122e26122a78373ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161224b906134ab565b600060405180830381600087803b15801561226557600080fd5b505af1158015612279573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506122a29190810190612c59565b6126ce565b6040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612727565b905061239f8161239a8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161233e90613342565b600060405180830381600087803b15801561235857600080fd5b505af115801561236c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506123959190810190612c59565b6126ce565b612727565b90506123e0816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612727565b905061249d816124988473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161243c90613456565b600060405180830381600087803b15801561245657600080fd5b505af115801561246a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506124939190810190612c59565b6126ce565b612727565b90506124de816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612727565b905061259b816125968473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161253a906133cc565b600060405180830381600087803b15801561255457600080fd5b505af1158015612568573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506125919190810190612c59565b6126ce565b612727565b90506125dc816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612727565b9050612699816126948473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612638906132b8565b600060405180830381600087803b15801561265257600080fd5b505af1158015612666573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061268f9190810190612c59565b6126ce565b612727565b90508084848151811015156126aa57fe5b906020019060200201819052508260010192506120a6565b83945050505050919050565b606060006126db836128f8565b141561271e576040805190810160405280600181526020017f20000000000000000000000000000000000000000000000000000000000000008152509050612722565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f19166020018201604052801561276f5781602001602082028038833980820191505090505b50935083925060009150600090505b855181101561283157858181518110151561279557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156127f457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061277e565b600090505b84518110156128e957848181518110151561284d57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156128ac57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612836565b83965050505050505092915050565b600081519050919050565b600082601f830112151561291657600080fd5b813561292961292482613562565b613535565b9150818183526020840193506020810190508360005b8381101561296f578135860161295588826129dd565b84526020840193506020830192505060018101905061293f565b5050505092915050565b60006129858251613653565b905092915050565b60006129998251613665565b905092915050565b60006129ad8251613677565b905092915050565b60006129c18251613689565b905092915050565b60006129d5825161369b565b905092915050565b600082601f83011215156129f057600080fd5b8135612a036129fe8261358a565b613535565b91508082526020830160208301858383011115612a1f57600080fd5b612a2a8382846136c9565b50505092915050565b600082601f8301121515612a4657600080fd5b8135612a59612a54826135b6565b613535565b91508082526020830160208301858383011115612a7557600080fd5b612a808382846136c9565b50505092915050565b600082601f8301121515612a9c57600080fd5b8151612aaf612aaa826135b6565b613535565b91508082526020830160208301858383011115612acb57600080fd5b612ad68382846136d8565b50505092915050565b60008060408385031215612af257600080fd5b600083013567ffffffffffffffff811115612b0c57600080fd5b612b1885828601612903565b925050602083013567ffffffffffffffff811115612b3557600080fd5b612b4185828601612a33565b9150509250929050565b600060208284031215612b5d57600080fd5b6000612b6b84828501612979565b91505092915050565b600060208284031215612b8657600080fd5b6000612b948482850161298d565b91505092915050565b600060208284031215612baf57600080fd5b6000612bbd848285016129a1565b91505092915050565b600060208284031215612bd857600080fd5b6000612be6848285016129b5565b91505092915050565b600060208284031215612c0157600080fd5b6000612c0f848285016129c9565b91505092915050565b600060208284031215612c2a57600080fd5b600082013567ffffffffffffffff811115612c4457600080fd5b612c5084828501612a33565b91505092915050565b600060208284031215612c6b57600080fd5b600082015167ffffffffffffffff811115612c8557600080fd5b612c9184828501612a89565b91505092915050565b600080600060608486031215612caf57600080fd5b600084013567ffffffffffffffff811115612cc957600080fd5b612cd586828701612a33565b", "935050602084013567ffffffffffffffff811115612cf257600080fd5b612cfe86828701612a33565b925050604084013567ffffffffffffffff811115612d1b57600080fd5b612d2786828701612a33565b9150509250925092565b60008060008060808587031215612d4757600080fd5b600085013567ffffffffffffffff811115612d6157600080fd5b612d6d87828801612a33565b945050602085013567ffffffffffffffff811115612d8a57600080fd5b612d9687828801612a33565b935050604085013567ffffffffffffffff811115612db357600080fd5b612dbf87828801612a33565b925050606085013567ffffffffffffffff811115612ddc57600080fd5b612de887828801612a33565b91505092959194509250565b6000612dff826135ef565b80845260208401935083602082028501612e18856135e2565b60005b84811015612e51578383038852612e33838351612ed4565b9250612e3e82613610565b9150602088019750600181019050612e1b565b508196508694505050505092915050565b612e6b8161363d565b82525050565b612e7a816136a5565b82525050565b612e89816136b7565b82525050565b612e9881613649565b82525050565b6000612ea982613605565b808452612ebd8160208601602086016136d8565b612ec68161370b565b602085010191505092915050565b6000612edf826135fa565b808452612ef38160208601602086016136d8565b612efc8161370b565b602085010191505092915050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f7461675f6e616d650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f7461675f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006020820190506130696000830184612e62565b92915050565b60006020820190506130846000830184612e8f565b92915050565b600060408201905061309f6000830185612e8f565b81810360208301526130b18184612df4565b90509392505050565b60006060820190506130cf6000830186612e8f565b81810360208301526130e18185612df4565b905081810360408301526130f58184612e9e565b9050949350505050565b60006040820190506131146000830185612e8f565b81810360208301526131268184612e9e565b90509392505050565b60006080820190506131446000830187612e8f565b81810360208301526131568186612e9e565b9050818103604083015261316a8185612e9e565b9050818103606083015261317e8184612e9e565b905095945050505050565b600060a08201905061319e6000830188612e8f565b81810360208301526131b08187612e9e565b905081810360408301526131c48186612e9e565b905081810360608301526131d88185612e9e565b905081810360808301526131ec8184612e9e565b90509695505050505050565b600060208201905081810360008301526132128184612ed4565b905092915050565b600060408201905081810360008301526132348185612ed4565b90506132436020830184612e71565b9392505050565b600060408201905081810360008301526132648185612ed4565b90506132736020830184612e80565b9392505050565b600060608201905081810360008301526132948186612ed4565b90506132a36020830185612e80565b6132b06040830184612e71565b949350505050565b600060208201905081810360008301526132d181612f0a565b9050919050565b600060408201905081810360008301526132f181612f0a565b905081810360208301526133058184612e9e565b905092915050565b6000604082019050818103600083015261332681612f41565b9050818103602083015261333a8184612ed4565b905092915050565b6000602082019050818103600083015261335b81612f78565b9050919050565b6000604082019050818103600083015261337b81612f78565b9050818103602083015261338f8184612ed4565b905092915050565b600060408201905081810360008301526133b081612f78565b905081810360208301526133c48184612e9e565b905092915050565b600060208201905081810360008301526133e581612faf565b9050919050565b6000604082019050818103600083015261340581612faf565b905081810360208301526134198184612ed4565b905092915050565b6000604082019050818103600083015261343a81612faf565b9050818103602083015261344e8184612e9e565b905092915050565b6000602082019050818103600083015261346f81612fe6565b9050919050565b6000604082019050818103600083015261348f81612fe6565b905081810360208301526134a38184612ed4565b905092915050565b600060208201905081810360008301526134c48161301d565b9050919050565b600060408201905081810360008301526134e48161301d565b905081810360208301526134f88184612ed4565b905092915050565b600060408201905081810360008301526135198161301d565b9050818103602083015261352d8184612e9e565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561355857600080fd5b8060405250919050565b600067ffffffffffffffff82111561357957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156135a157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156135cd57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600061365e8261361d565b9050919050565b60006136708261361d565b9050919050565b60006136828261361d565b9050919050565b60006136948261361d565b9050919050565b6000819050919050565b60006136b08261361d565b9050919050565b60006136c28261361d565b9050919050565b82818337600083830152505050565b60005b838110156136f65780820151818401526020810190506136db565b83811115613705576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820ec412e7a93ab136d11ebcdf9068f86866ed15e3560e756c0e98f091d24c4aa7d6c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"", "0000000000028152600401602060405180830381600087803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d329190810190612b9d565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb46040805190810160405280600a81526020017f6669785f69645f303034000000000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610dbe91906134ab565b600060405180830381600087803b158015610dd857600080fd5b505af1158015610dec573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886000815181101515610e1b57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e5d9190613441565b600060405180830381600087803b158015610e7757600080fd5b505af1158015610e8b573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886001815181101515610eba57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610efc9190613362565b600060405180830381600087803b158015610f1657600080fd5b505af1158015610f2a573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886002815181101515610f5957fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f9b91906133ec565b600060405180830381600087803b158015610fb557600080fd5b505af1158015610fc9573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886003815181101515610ff857fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161103a91906132d8565b600060405180830381600087803b15801561105457600080fd5b505af1158015611068573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110c19190613500565b600060405180830381600087803b1580156110db57600080fd5b505af11580156110ef573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06040805190810160405280600a81526020017f6669785f69645f30303400000000000000000000000000000000000000000000815250846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161117f92919061324a565b602060405180830381600087803b15801561119957600080fd5b505af11580156111ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111d19190810190612bef565b905060018114156111e55760009350611209565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f84888860405161123c939291906130ba565b60405180910390a18094505b5050505092915050565b60008060008060008093506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601481526020017f646174615f7365745f64656661756c745f7461670000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161130891906131f8565b602060405180830381600087803b15801561132257600080fd5b505af1158015611336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061135a9190810190612bc6565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156113c057600080fd5b505af11580156113d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113f89190810190612b4b565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161144f9190613476565b600060405180830381600087803b15801561146957600080fd5b505af115801561147d573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166309ff42f06040805190810160405280600a81526020017f6669785f69645f30303400000000000000000000000000000000000000000000815250846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161150d92919061321a565b602060405180830381600087803b15801561152757600080fd5b505af115801561153b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061155f9190810190612bef565b90506001811215156115745760009350611598565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5d528ae6f2f8bddbfc139090621683e2eaefebbd3654e1db601848d2581a193b84876040516115c99291906130ff565b60405180910390a180945050505050919050565b600080600080600080600094506115f38a61071c565b1515611663577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507fcec28b4baf7cc2a7ed2fc9d09086089702d907240b080f609acb60309a914084858b8b8b8b604051611653959493929190613189565b60405180910390a1849550611c16565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601481526020017f646174615f7365745f64656661756c745f7461670000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161170e91906131f8565b602060405180830381600087803b15801561172857600080fd5b505af115801561173c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117609190810190612bc6565b93508373ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156117c657600080fd5b505af11580156117da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117fe9190810190612b4b565b92508273ffffffffffffffffffffffffffffffffffffffff1663ae763db58b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118559190613476565b600060405180830381600087803b15801561186f57600080fd5b505af1158015611883573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156118eb57600080fd5b505af11580156118ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119239190810190612b9d565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48a6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161197a9190613397565b600060405180830381600087803b15801561199457600080fd5b505af11580156119a8573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a01919061330d565b600060405180830381600087803b158015611a1b57600080fd5b505af1158015611a2f573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a889190613500565b600060405180830381600087803b158015611aa257600080fd5b505af1158015611ab6573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663664b37d66040805190810160405280600a81526020017f6669785f69645f3030340000000000000000000000000000000000000000000081525084866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b489392919061327a565b602060405180830381600087803b158015611b6257600080fd5b505af1158015611b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b9a9190810190612bef565b9050600181121515611baf5760009450611bd3565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7fcec28b4baf7cc2a7ed2fc9d09086089702d907240b080f609acb60309a914084858b8b8b8b604051611c0a959493929190613189565b60405180910390a18095505b5050505050949350505050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601481526020017f646174615f7365745f64656661756c745f7461670000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611cd591906131f8565b", "602060405180830381600087803b158015611cef57600080fd5b505af1158015611d03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d279190810190612bc6565b91508173ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f303034000000000000000000000000000000000000000000008152508473ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611ddf57600080fd5b505af1158015611df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e179190810190612b4b565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e5092919061321a565b602060405180830381600087803b158015611e6a57600080fd5b505af1158015611e7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ea29190810190612b74565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611f0857600080fd5b505af1158015611f1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f409190810190612bef565b60001415611fae577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd6000604051908082528060200260200182016040528015611f9e57816020015b6060815260200190600190039081611f895790505b5081915080905093509350611fc1565b6000611fb982611fc7565b819150935093505b50509091565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561203357600080fd5b505af1158015612047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061206b9190810190612bef565b60405190808252806020026020018201604052801561209e57816020015b60608152602001906001900390816120895790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561210a57600080fd5b505af115801561211e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121429190810190612bef565b8312156126c2578573ffffffffffffffffffffffffffffffffffffffff16633dd2b614846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161219e919061306f565b602060405180830381600087803b1580156121b857600080fd5b505af11580156121cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121f09190810190612b9d565b91506122e26122a78373ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161224b90613421565b600060405180830381600087803b15801561226557600080fd5b505af1158015612279573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506122a29190810190612c59565b6126ce565b6040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612727565b905061239f8161239a8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161233e90613342565b600060405180830381600087803b15801561235857600080fd5b505af115801561236c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506123959190810190612c59565b6126ce565b612727565b90506123e0816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612727565b905061249d816124988473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161243c906133cc565b600060405180830381600087803b15801561245657600080fd5b505af115801561246a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506124939190810190612c59565b6126ce565b612727565b90506124de816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612727565b905061259b816125968473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161253a906132b8565b600060405180830381600087803b15801561255457600080fd5b505af1158015612568573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506125919190810190612c59565b6126ce565b612727565b90506125dc816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612727565b9050612699816126948473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612638906134e0565b600060405180830381600087803b15801561265257600080fd5b505af1158015612666573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061268f9190810190612c59565b6126ce565b612727565b90508084848151811015156126aa57fe5b906020019060200201819052508260010192506120a6565b83945050505050919050565b606060006126db836128f8565b141561271e576040805190810160405280600181526020017f20000000000000000000000000000000000000000000000000000000000000008152509050612722565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f19166020018201604052801561276f5781602001602082028038833980820191505090505b50935083925060009150600090505b855181101561283157858181518110151561279557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156127f457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061277e565b600090505b84518110156128e957848181518110151561284d57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156128ac57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612836565b83965050505050505092915050565b600081519050919050565b600082601f830112151561291657600080fd5b813561292961292482613562565b613535565b9150818183526020840193506020810190508360005b8381101561296f578135860161295588826129dd565b84526020840193506020830192505060018101905061293f565b5050505092915050565b60006129858251613653565b905092915050565b60006129998251613665565b905092915050565b60006129ad8251613677565b905092915050565b60006129c18251613689565b905092915050565b60006129d5825161369b565b905092915050565b600082601f83011215156129f057600080fd5b8135612a036129fe8261358a565b613535565b91508082526020830160208301858383011115612a1f57600080fd5b612a2a8382846136c9565b50505092915050565b600082601f8301121515612a4657600080fd5b8135612a59612a54826135b6565b613535565b91508082526020830160208301858383011115612a7557600080fd5b612a808382846136c9565b50505092915050565b600082601f8301121515612a9c57600080fd5b8151612aaf612aaa826135b6565b613535565b91508082526020830160208301858383011115612acb57600080fd5b612ad68382846136d8565b50505092915050565b60008060408385031215612af257600080fd5b600083013567ffffffffffffffff811115612b0c57600080fd5b612b1885828601612903565b925050602083013567ffffffffffffffff811115612b3557600080fd5b612b4185828601612a33565b9150509250929050565b600060208284031215612b5d57600080fd5b6000612b6b84828501612979565b91505092915050565b600060208284031215612b8657600080fd5b6000612b948482850161298d565b91505092915050565b600060208284031215612baf57600080fd5b6000612bbd848285016129a1565b91505092915050565b600060208284031215612bd857600080fd5b6000612be6848285016129b5565b91505092915050565b600060208284031215612c0157600080fd5b6000612c0f848285016129c9565b91505092915050565b600060208284031215612c2a57600080fd5b600082013567ffffffffffffffff811115612c4457600080fd5b612c5084828501612a33565b91505092915050565b600060208284031215612c6b57600080fd5b600082015167ffffffffffffffff811115612c8557600080fd5b612c9184828501612a89565b91505092915050565b600080600060608486031215612caf57600080fd5b600084013567ffffffffffffffff811115612cc957600080fd5b612cd586828701612a33565b", "935050602084013567ffffffffffffffff811115612cf257600080fd5b612cfe86828701612a33565b925050604084013567ffffffffffffffff811115612d1b57600080fd5b612d2786828701612a33565b9150509250925092565b60008060008060808587031215612d4757600080fd5b600085013567ffffffffffffffff811115612d6157600080fd5b612d6d87828801612a33565b945050602085013567ffffffffffffffff811115612d8a57600080fd5b612d9687828801612a33565b935050604085013567ffffffffffffffff811115612db357600080fd5b612dbf87828801612a33565b925050606085013567ffffffffffffffff811115612ddc57600080fd5b612de887828801612a33565b91505092959194509250565b6000612dff826135ef565b80845260208401935083602082028501612e18856135e2565b60005b84811015612e51578383038852612e33838351612ed4565b9250612e3e82613610565b9150602088019750600181019050612e1b565b508196508694505050505092915050565b612e6b8161363d565b82525050565b612e7a816136a5565b82525050565b612e89816136b7565b82525050565b612e9881613649565b82525050565b6000612ea982613605565b808452612ebd8160208601602086016136d8565b612ec68161370b565b602085010191505092915050565b6000612edf826135fa565b808452612ef38160208601602086016136d8565b612efc8161370b565b602085010191505092915050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f7461675f6e616d650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f7461675f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b60006020820190506130696000830184612e62565b92915050565b60006020820190506130846000830184612e8f565b92915050565b600060408201905061309f6000830185612e8f565b81810360208301526130b18184612df4565b90509392505050565b60006060820190506130cf6000830186612e8f565b81810360208301526130e18185612df4565b905081810360408301526130f58184612e9e565b9050949350505050565b60006040820190506131146000830185612e8f565b81810360208301526131268184612e9e565b90509392505050565b60006080820190506131446000830187612e8f565b81810360208301526131568186612e9e565b9050818103604083015261316a8185612e9e565b9050818103606083015261317e8184612e9e565b905095945050505050565b600060a08201905061319e6000830188612e8f565b81810360208301526131b08187612e9e565b905081810360408301526131c48186612e9e565b905081810360608301526131d88185612e9e565b905081810360808301526131ec8184612e9e565b90509695505050505050565b600060208201905081810360008301526132128184612ed4565b905092915050565b600060408201905081810360008301526132348185612ed4565b90506132436020830184612e71565b9392505050565b600060408201905081810360008301526132648185612ed4565b90506132736020830184612e80565b9392505050565b600060608201905081810360008301526132948186612ed4565b90506132a36020830185612e80565b6132b06040830184612e71565b949350505050565b600060208201905081810360008301526132d181612f0a565b9050919050565b600060408201905081810360008301526132f181612f0a565b905081810360208301526133058184612ed4565b905092915050565b6000604082019050818103600083015261332681612f0a565b9050818103602083015261333a8184612e9e565b905092915050565b6000602082019050818103600083015261335b81612f41565b9050919050565b6000604082019050818103600083015261337b81612f41565b9050818103602083015261338f8184612ed4565b905092915050565b600060408201905081810360008301526133b081612f41565b905081810360208301526133c48184612e9e565b905092915050565b600060208201905081810360008301526133e581612f78565b9050919050565b6000604082019050818103600083015261340581612f78565b905081810360208301526134198184612ed4565b905092915050565b6000602082019050818103600083015261343a81612faf565b9050919050565b6000604082019050818103600083015261345a81612faf565b9050818103602083015261346e8184612ed4565b905092915050565b6000604082019050818103600083015261348f81612faf565b905081810360208301526134a38184612e9e565b905092915050565b600060408201905081810360008301526134c481612fe6565b905081810360208301526134d88184612ed4565b905092915050565b600060208201905081810360008301526134f98161301d565b9050919050565b600060408201905081810360008301526135198161301d565b9050818103602083015261352d8184612e9e565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561355857600080fd5b8060405250919050565b600067ffffffffffffffff82111561357957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156135a157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156135cd57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600061365e8261361d565b9050919050565b60006136708261361d565b9050919050565b60006136828261361d565b9050919050565b60006136948261361d565b9050919050565b6000819050919050565b60006136b08261361d565b9050919050565b60006136c28261361d565b9050919050565b82818337600083830152505050565b60005b838110156136f65780820151818401526020810190506136db565b83811115613705576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058200b27d3212664270031df1d6e10b2ffab9eb52f4065d79f678ecd85ae4e2c5cdb6c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[{\"name\":\"tag_id\",\"type\":\"string\"}],\"name\":\"isExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tag_id\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJson\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tag_id\",\"type\":\"string\"}],\"name\":\"deleteByTagId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selectAll\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"params\",\"type\":\"string[]\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tag_id\",\"type\":\"string\"},{\"name\":\"tag_name\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insertEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"tag_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"tag_name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"tag_id\",\"type\":\"string\"}],\"name\":\"deleteByTagIdEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"tag_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJsonEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_UPDATEEXTJSON = "updateExtJson";

    public static final String FUNC_DELETEBYTAGID = "deleteByTagId";

    public static final String FUNC_SELECTALL = "selectAll";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_UPDATE = "update";

    public static final Event INSERTEVENT_EVENT = new Event("insertEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEVENT_EVENT = new Event("updateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event DELETEBYTAGIDEVENT_EVENT = new Event("deleteByTagIdEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEXTJSONEVENT_EVENT = new Event("updateExtJsonEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected DataSetDefaultTagContract(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public Boolean isExist(String tag_id) throws ContractException {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new Utf8String(tag_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt updateExtJson(String tag_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateExtJson(String tag_id, String ext_json, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateExtJson(String tag_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateExtJsonInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateExtJsonOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt deleteByTagId(String tag_id) {
        final Function function = new Function(
                FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(new Utf8String(tag_id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void deleteByTagId(String tag_id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(new Utf8String(tag_id)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteByTagId(String tag_id) {
        final Function function = new Function(
                FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(new Utf8String(tag_id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getDeleteByTagIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<BigInteger> getDeleteByTagIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_DELETEBYTAGID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple2<BigInteger, List<String>> selectAll() throws ContractException {
        final Function function = new Function(FUNC_SELECTALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public TransactionReceipt insert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(List<String> params, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<List<String>, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<List<String>, String>(

                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt update(String tag_id, String tag_name, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(tag_name),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void update(String tag_id, String tag_name, String ext_json, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(tag_name),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdate(String tag_id, String tag_name, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(tag_id),
                new Utf8String(tag_name),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, String, String, String> getUpdateInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertEventEventResponse> getInsertEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTEVENT_EVENT, transactionReceipt);
        ArrayList<InsertEventEventResponse> responses = new ArrayList<InsertEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertEventEventResponse typedResponse = new InsertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateEventEventResponse> getUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateEventEventResponse> responses = new ArrayList<UpdateEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateEventEventResponse typedResponse = new UpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.tag_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.tag_name = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<DeleteByTagIdEventEventResponse> getDeleteByTagIdEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEBYTAGIDEVENT_EVENT, transactionReceipt);
        ArrayList<DeleteByTagIdEventEventResponse> responses = new ArrayList<DeleteByTagIdEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            DeleteByTagIdEventEventResponse typedResponse = new DeleteByTagIdEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.tag_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeDeleteByTagIdEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYTAGIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeDeleteByTagIdEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYTAGIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateExtJsonEventEventResponse> getUpdateExtJsonEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEXTJSONEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateExtJsonEventEventResponse> responses = new ArrayList<UpdateExtJsonEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateExtJsonEventEventResponse typedResponse = new UpdateExtJsonEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.tag_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateExtJsonEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateExtJsonEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static DataSetDefaultTagContract load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new DataSetDefaultTagContract(contractAddress, client, credential);
    }

    public static DataSetDefaultTagContract deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(DataSetDefaultTagContract.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public List<String> params;

        public String ext_json;
    }

    public static class UpdateEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String tag_id;

        public String tag_name;

        public String ext_json;

        public String updated_time;
    }

    public static class DeleteByTagIdEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String tag_id;
    }

    public static class UpdateExtJsonEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String tag_id;

        public String ext_json;

        public String updated_time;
    }
}
