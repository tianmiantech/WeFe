package com.welab.wefe.manager.service.contract;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class TrustCertsContract extends Contract {
    public static final String[] BINARY_ARRAY = {"60806040523480156200001157600080fd5b506110016000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356004b6a6040805190810160405280600b81526020017f74727573745f63657274730000000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620001019190620002e2565b602060405180830381600087803b1580156200011c57600080fd5b505af115801562000131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000157919081019062000174565b506200038c565b60006200016c82516200033b565b905092915050565b6000602082840312156200018757600080fd5b600062000197848285016200015e565b91505092915050565b6000620001ad8262000330565b808452620001c381602086016020860162000345565b620001ce816200037b565b602085010191505092915050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000609d82527f636572745f69642c6d656d6265725f69642c73657269616c5f6e756d6265722c60208301527f636572745f636f6e74656e742c705f636572745f69642c6973737565725f6f7260408301527f672c6973737565725f636e2c7375626a6563745f6f72672c7375626a6563745f60608301527f636e2c69735f63615f636572742c69735f726f6f745f636572742c637265617460808301527f65645f74696d652c757064617465645f74696d652c6578745f6a736f6e00000060a083015260c082019050919050565b60006060820190508181036000830152620002fe8184620001a0565b905081810360208301526200031381620001dc565b90508181036040830152620003288162000213565b905092915050565b600081519050919050565b6000819050919050565b60005b838110156200036557808201518184015260208101905062000348565b8381111562000375576000848401525b50505050565b6000601f19601f8301169050919050565b6123cc806200039c6000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063326c29b71461005c5780634d3d096b1461009957806397291150146100d6575b600080fd5b34801561006857600080fd5b50610083600480360361007e919081019061189e565b610113565b6040516100909190611d49565b60405180910390f35b3480156100a557600080fd5b506100c060048036036100bb919081019061189e565b610512565b6040516100cd9190611d2e565b60405180910390f35b3480156100e257600080fd5b506100fd60048036036100f89190810190611765565b6108d6565b60405161010a9190611d49565b60405180910390f35b600080600080600080935061012786610512565b1515610191577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd93507f1e3cf4bd2ef782e605ae7cfaf1ebae6bcad49ffcdaaba620f5f750eda1883a288487604051610181929190611da9565b60405180910390a1839450610509565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600b81526020017f74727573745f63657274730000000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161023c9190611dd9565b602060405180830381600087803b15801561025657600080fd5b505af115801561026a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061028e919081019061184c565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156102f457600080fd5b505af1158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061032c91908101906117d1565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016103839190612038565b600060405180830381600087803b15801561039d57600080fd5b505af11580156103b1573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166328bb21176040805190810160405280600b81526020017f74727573745f6365727473000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610441929190611dfb565b602060405180830381600087803b15801561045b57600080fd5b505af115801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104939190810190611875565b90506001811215156104a857600093506104cc565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f1e3cf4bd2ef782e605ae7cfaf1ebae6bcad49ffcdaaba620f5f750eda1883a2884876040516104fd929190611da9565b60405180910390a18394505b50505050919050565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600b81526020017f74727573745f63657274730000000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016105c39190611dd9565b602060405180830381600087803b1580156105dd57600080fd5b505af11580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610615919081019061184c565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106b391908101906117d1565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1866040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161070a9190612038565b600060405180830381600087803b15801561072457600080fd5b505af1158015610738573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600b81526020017f74727573745f6365727473000000000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016107c8929190611dfb565b602060405180830381600087803b1580156107e257600080fd5b505af11580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061081a91908101906117fa565b905060008173ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561088257600080fd5b505af1158015610896573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108ba9190810190611875565b11156108c957600193506108ce565b600093505b505050919050565b60008060008060008093506109028760008151811015156108f357fe5b90602001906020020151610512565b1561098d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f84888860405161095d93929190611d64565b60405180910390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94506115d5565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600b81526020017f74727573745f63657274730000000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a389190611dd9565b602060405180830381600087803b158015610a5257600080fd5b505af1158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a8a919081019061184c565b92508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610af057600080fd5b505af1158015610b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b289190810190611823565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600b81526020017f74727573745f63657274730000000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610bb49190611f64565b600060405180830381600087803b158015610bce57600080fd5b505af1158015610be2573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886000815181101515610c1157fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610c539190612003565b600060405180830381600087803b1580","","000000000000000000000000000000000000000000006020830152604082019050919050565b6000600982527f6973737565725f636e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000600a82527f7375626a6563745f636e000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000602082019050611d43600083018461194d565b92915050565b6000602082019050611d5e600083018461197a565b92915050565b6000606082019050611d79600083018661197a565b8181036020830152611d8b81856118df565b90508181036040830152611d9f8184611989565b9050949350505050565b6000604082019050611dbe600083018561197a565b8181036020830152611dd08184611989565b90509392505050565b60006020820190508181036000830152611df381846119bf565b905092915050565b60006040820190508181036000830152611e1581856119bf565b9050611e24602083018461195c565b9392505050565b60006040820190508181036000830152611e4581856119bf565b9050611e54602083018461196b565b9392505050565b60006040820190508181036000830152611e74816119f5565b90508181036020830152611e8881846119bf565b905092915050565b60006040820190508181036000830152611ea981611a2c565b90508181036020830152611ebd81846119bf565b905092915050565b60006040820190508181036000830152611ede81611a63565b90508181036020830152611ef281846119bf565b905092915050565b60006040820190508181036000830152611f1381611a9a565b90508181036020830152611f278184611989565b905092915050565b60006040820190508181036000830152611f4881611ad1565b90508181036020830152611f5c81846119bf565b905092915050565b60006040820190508181036000830152611f7d81611b08565b90508181036020830152611f9181846119bf565b905092915050565b60006040820190508181036000830152611fb281611b3f565b90508181036020830152611fc681846119bf565b905092915050565b60006040820190508181036000830152611fe781611b76565b90508181036020830152611ffb81846119bf565b905092915050565b6000604082019050818103600083015261201c81611bad565b9050818103602083015261203081846119bf565b905092915050565b6000604082019050818103600083015261205181611bad565b905081810360208301526120658184611989565b905092915050565b6000604082019050818103600083015261208681611be4565b9050818103602083015261209a81846119bf565b905092915050565b600060408201905081810360008301526120bb81611c1b565b905081810360208301526120cf81846119bf565b905092915050565b600060408201905081810360008301526120f081611c52565b9050818103602083015261210481846119bf565b905092915050565b6000604082019050818103600083015261212581611c89565b9050818103602083015261213981846119bf565b905092915050565b6000604082019050818103600083015261215a81611cc0565b9050818103602083015261216e81846119bf565b905092915050565b6000604082019050818103600083015261218f81611cf7565b905081810360208301526121a381846119bf565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156121ce57600080fd5b8060405250919050565b600067ffffffffffffffff8211156121ef57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561221757600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561224357600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60006122d482612293565b9050919050565b60006122e682612293565b9050919050565b60006122f882612293565b9050919050565b600061230a82612293565b9050919050565b6000819050919050565b600061232682612293565b9050919050565b600061233882612293565b9050919050565b82818337600083830152505050565b60005b8381101561236c578082015181840152602081019050612351565b8381111561237b576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820207f20a4809f63f2724bf0b57dde6678b3962a8666e52ba513af64a6fb9ec0d26c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","","000000000000000000000000000000000000000000006020830152604082019050919050565b6000600a82527f7375626a6563745f636e000000000000000000000000000000000000000000006020830152604082019050919050565b6000600982527f6973737565725f636e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000602082019050611d43600083018461194d565b92915050565b6000602082019050611d5e600083018461197a565b92915050565b6000606082019050611d79600083018661197a565b8181036020830152611d8b81856118df565b90508181036040830152611d9f8184611989565b9050949350505050565b6000604082019050611dbe600083018561197a565b8181036020830152611dd08184611989565b90509392505050565b60006020820190508181036000830152611df381846119bf565b905092915050565b60006040820190508181036000830152611e1581856119bf565b9050611e24602083018461195c565b9392505050565b60006040820190508181036000830152611e4581856119bf565b9050611e54602083018461196b565b9392505050565b60006040820190508181036000830152611e74816119f5565b90508181036020830152611e8881846119bf565b905092915050565b60006040820190508181036000830152611ea981611a2c565b90508181036020830152611ebd81846119bf565b905092915050565b60006040820190508181036000830152611ede81611a63565b90508181036020830152611ef281846119bf565b905092915050565b60006040820190508181036000830152611f1381611a9a565b90508181036020830152611f2781846119bf565b905092915050565b60006040820190508181036000830152611f4881611ad1565b90508181036020830152611f5c81846119bf565b905092915050565b60006040820190508181036000830152611f7d81611b08565b90508181036020830152611f9181846119bf565b905092915050565b60006040820190508181036000830152611fb281611b3f565b90508181036020830152611fc681846119bf565b905092915050565b60006040820190508181036000830152611fe781611b76565b90508181036020830152611ffb81846119bf565b905092915050565b6000604082019050818103600083015261201c81611b76565b905081810360208301526120308184611989565b905092915050565b6000604082019050818103600083015261205181611bad565b9050818103602083015261206581846119bf565b905092915050565b6000604082019050818103600083015261208681611be4565b9050818103602083015261209a81846119bf565b905092915050565b600060408201905081810360008301526120bb81611c1b565b905081810360208301526120cf81846119bf565b905092915050565b600060408201905081810360008301526120f081611c52565b9050818103602083015261210481846119bf565b905092915050565b6000604082019050818103600083015261212581611c89565b9050818103602083015261213981846119bf565b905092915050565b6000604082019050818103600083015261215a81611cc0565b9050818103602083015261216e81846119bf565b905092915050565b6000604082019050818103600083015261218f81611cf7565b905081810360208301526121a38184611989565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156121ce57600080fd5b8060405250919050565b600067ffffffffffffffff8211156121ef57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561221757600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561224357600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60006122d482612293565b9050919050565b60006122e682612293565b9050919050565b60006122f882612293565b9050919050565b600061230a82612293565b9050919050565b6000819050919050565b600061232682612293565b9050919050565b600061233882612293565b9050919050565b82818337600083830152505050565b60005b8381101561236c578082015181840152602081019050612351565b8381111561237b576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820e057d42036cb9ab3d02087147a881f8f8b01f4a4c1e70b81559630d691a72b2e6c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"cert_id\",\"type\":\"string\"}],\"name\":\"deleteByCertId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cert_id\",\"type\":\"string\"}],\"name\":\"isExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"params\",\"type\":\"string[]\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insertEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"cert_id\",\"type\":\"string\"}],\"name\":\"deleteByCertIdEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_DELETEBYCERTID = "deleteByCertId";

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_INSERT = "insert";

    public static final Event INSERTEVENT_EVENT = new Event("insertEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event DELETEBYCERTIDEVENT_EVENT = new Event("deleteByCertIdEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected TrustCertsContract(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt deleteByCertId(String cert_id) {
        final Function function = new Function(
                FUNC_DELETEBYCERTID, 
                Arrays.<Type>asList(new Utf8String(cert_id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void deleteByCertId(String cert_id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETEBYCERTID, 
                Arrays.<Type>asList(new Utf8String(cert_id)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteByCertId(String cert_id) {
        final Function function = new Function(
                FUNC_DELETEBYCERTID, 
                Arrays.<Type>asList(new Utf8String(cert_id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getDeleteByCertIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETEBYCERTID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<BigInteger> getDeleteByCertIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_DELETEBYCERTID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Boolean isExist(String cert_id) throws ContractException {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new Utf8String(cert_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt insert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(List<String> params, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<List<String>, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<List<String>, String>(

                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertEventEventResponse> getInsertEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTEVENT_EVENT, transactionReceipt);
        ArrayList<InsertEventEventResponse> responses = new ArrayList<InsertEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertEventEventResponse typedResponse = new InsertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<DeleteByCertIdEventEventResponse> getDeleteByCertIdEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEBYCERTIDEVENT_EVENT, transactionReceipt);
        ArrayList<DeleteByCertIdEventEventResponse> responses = new ArrayList<DeleteByCertIdEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            DeleteByCertIdEventEventResponse typedResponse = new DeleteByCertIdEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.cert_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeDeleteByCertIdEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYCERTIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeDeleteByCertIdEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYCERTIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static TrustCertsContract load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new TrustCertsContract(contractAddress, client, credential);
    }

    public static TrustCertsContract deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(TrustCertsContract.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public List<String> params;

        public String ext_json;
    }

    public static class DeleteByCertIdEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String cert_id;
    }
}
