/*
 * Copyright 2021 Tianmian Tech. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.welab.wefe.union.service.contract;

import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.*;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

@SuppressWarnings("unchecked")
public class MemberAuthTypeContract extends Contract {
    public static final String[] BINARY_ARRAY = {"","","ffffffffffffffffffffffffffffff1663cd30a1d1876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d23919061328a565b600060405180830381600087803b158015611d3d57600080fd5b505af1158015611d51573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166328bb21176040805190810160405280600a81526020017f6669785f69645f30303600000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611de1929190613083565b602060405180830381600087803b158015611dfb57600080fd5b505af1158015611e0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e339190810190612ad9565b9050600181121515611e485760009350611e6c565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f14b8f78bc0056726e64fe4da75cf492532421910d373685f39c105d0cdd501d28487604051611e9d929190612f92565b60405180910390a180945050505050919050565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611f1d57600080fd5b505af1158015611f31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f559190810190612ad9565b604051908082528060200260200182016040528015611f8857816020015b6060815260200190600190039081611f735790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611ff457600080fd5b505af1158015612008573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061202c9190810190612ad9565b8312156125ac578573ffffffffffffffffffffffffffffffffffffffff1663846719e0846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016120889190612f02565b602060405180830381600087803b1580156120a257600080fd5b505af11580156120b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120da9190810190612a87565b91506121cc6121918373ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161213590613235565b600060405180830381600087803b15801561214f57600080fd5b505af1158015612163573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061218c9190810190612b43565b6125b8565b6040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612611565b9050612289816122848473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161222890613314565b600060405180830381600087803b15801561224257600080fd5b505af1158015612256573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061227f9190810190612b43565b6125b8565b612611565b90506122ca816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612611565b9050612387816123828473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612326906132bf565b600060405180830381600087803b15801561234057600080fd5b505af1158015612354573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061237d9190810190612b43565b6125b8565b612611565b90506123c8816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612611565b9050612485816124808473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612424906131ab565b600060405180830381600087803b15801561243e57600080fd5b505af1158015612452573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061247b9190810190612b43565b6125b8565b612611565b90506124c6816040805190810160405280600181526020017f7c00000000000000000000000000000000000000000000000000000000000000815250612611565b90506125838161257e8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161252290613121565b600060405180830381600087803b15801561253c57600080fd5b505af1158015612550573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506125799190810190612b43565b6125b8565b612611565b905080848481518110151561259457fe5b90602001906020020181905250826001019250611f90565b83945050505050919050565b606060006125c5836127e2565b1415612608576040805190810160405280600181526020017f2000000000000000000000000000000000000000000000000000000000000000815250905061260c565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f1916602001820160405280156126595781602001602082028038833980820191505090505b50935083925060009150600090505b855181101561271b57858181518110151561267f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156126de57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612668565b600090505b84518110156127d357848181518110151561273757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561279657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612720565b83965050505050505092915050565b600081519050919050565b600082601f830112151561280057600080fd5b813561281361280e826133cb565b61339e565b9150818183526020840193506020810190508360005b83811015612859578135860161283f88826128c7565b845260208401935060208301925050600181019050612829565b5050505092915050565b600061286f82516134bc565b905092915050565b600061288382516134ce565b905092915050565b600061289782516134e0565b905092915050565b60006128ab82516134f2565b905092915050565b60006128bf8251613504565b905092915050565b600082601f83011215156128da57600080fd5b81356128ed6128e8826133f3565b61339e565b9150808252602083016020830185838301111561290957600080fd5b612914838284613532565b50505092915050565b600082601f830112151561293057600080fd5b813561294361293e8261341f565b61339e565b9150808252602083016020830185838301111561295f57600080fd5b61296a838284613532565b50505092915050565b600082601f830112151561298657600080fd5b81516129996129948261341f565b61339e565b915080825260208301602083018583830111156129b557600080fd5b6129c0838284613541565b50505092915050565b600080604083850312156129dc57600080fd5b600083013567ffffffffffffffff8111156129f657600080fd5b612a02858286016127ed565b925050602083013567ffffffffffffffff811115612a1f57600080fd5b612a2b8582860161291d565b9150509250929050565b600060208284031215612a4757600080fd5b6000612a5584828501612863565b91505092915050565b600060208284031215612a7057600080fd5b6000612a7e84828501612877565b91505092915050565b600060208284031215612a9957600080fd5b6000612aa78482850161288b565b91505092915050565b600060208284031215612ac257600080fd5b6000612ad08482850161289f565b91505092915050565b600060208284031215612aeb57600080fd5b6000612af9848285016128b3565b91505092915050565b600060208284031215612b1457600080fd5b600082013567ffffffffffffffff811115612b2e57600080fd5b612b3a8482850161291d565b91505092915050565b600060208284031215612b5557600080fd5b600082015167ffffffffffffffff811115612b6f57600080fd5b612b7b84828501612973565b91505092915050565b60008060408385031215612b9757600080fd5b600083013567ffffffffffffffff811115612bb157600080fd5b612bbd8582860161291d565b925050602083013567ffffffffffffffff811115612bda57600080fd5b612be68582860161291d565b9150509250929050565b600080600060608486031215612c0557600080fd5b600084013567ffffffffffffffff811115612c1f57600080fd5b612c2b8682870161291d565b935050602084013567ffffffffffffffff811115612c4857600080fd5b612c548682870161291d565b925050604084013567ffffffffffffffff811115612c7157600080fd5b612c7d8682870161291d565b9150509250925092565b6000612c9282613458565b80845260208401935083602082028501612cab8561344b565b60005b84811015612ce4578383038852612cc6838351612d67565b9250612cd182613479565b91506020","88019750600181019050612cae565b508196508694505050505092915050565b612cfe816134a6565b82525050565b612d0d8161350e565b82525050565b612d1c81613520565b82525050565b612d2b816134b2565b82525050565b6000612d3c8261346e565b808452612d50816020860160208601613541565b612d5981613574565b602085010191505092915050565b6000612d7282613463565b808452612d86816020860160208601613541565b612d8f81613574565b602085010191505092915050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f747970655f6964000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600982527f747970655f6e616d6500000000000000000000000000000000000000000000006020830152604082019050919050565b6000602082019050612efc6000830184612cf5565b92915050565b6000602082019050612f176000830184612d22565b92915050565b6000604082019050612f326000830185612d22565b8181036020830152612f448184612c87565b90509392505050565b6000606082019050612f626000830186612d22565b8181036020830152612f748185612c87565b90508181036040830152612f888184612d31565b9050949350505050565b6000604082019050612fa76000830185612d22565b8181036020830152612fb98184612d31565b90509392505050565b6000606082019050612fd76000830186612d22565b8181036020830152612fe98185612d31565b90508181036040830152612ffd8184612d31565b9050949350505050565b600060808201905061301c6000830187612d22565b818103602083015261302e8186612d31565b905081810360408301526130428185612d31565b905081810360608301526130568184612d31565b905095945050505050565b6000602082019050818103600083015261307b8184612d67565b905092915050565b6000604082019050818103600083015261309d8185612d67565b90506130ac6020830184612d04565b9392505050565b600060408201905081810360008301526130cd8185612d67565b90506130dc6020830184612d13565b9392505050565b600060608201905081810360008301526130fd8186612d67565b905061310c6020830185612d13565b6131196040830184612d04565b949350505050565b6000602082019050818103600083015261313a81612d9d565b9050919050565b6000604082019050818103600083015261315a81612d9d565b9050818103602083015261316e8184612d31565b905092915050565b6000604082019050818103600083015261318f81612dd4565b905081810360208301526131a38184612d67565b905092915050565b600060208201905081810360008301526131c481612e0b565b9050919050565b600060408201905081810360008301526131e481612e0b565b905081810360208301526131f88184612d67565b905092915050565b6000604082019050818103600083015261321981612e0b565b9050818103602083015261322d8184612d31565b905092915050565b6000602082019050818103600083015261324e81612e42565b9050919050565b6000604082019050818103600083015261326e81612e42565b905081810360208301526132828184612d67565b905092915050565b600060408201905081810360008301526132a381612e42565b905081810360208301526132b78184612d31565b905092915050565b600060208201905081810360008301526132d881612e79565b9050919050565b600060408201905081810360008301526132f881612e79565b9050818103602083015261330c8184612d67565b905092915050565b6000602082019050818103600083015261332d81612eb0565b9050919050565b6000604082019050818103600083015261334d81612eb0565b905081810360208301526133618184612d67565b905092915050565b6000604082019050818103600083015261338281612eb0565b905081810360208301526133968184612d31565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156133c157600080fd5b8060405250919050565b600067ffffffffffffffff8211156133e257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561340a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561343657600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60006134c782613486565b9050919050565b60006134d982613486565b9050919050565b60006134eb82613486565b9050919050565b60006134fd82613486565b9050919050565b6000819050919050565b600061351982613486565b9050919050565b600061352b82613486565b9050919050565b82818337600083830152505050565b60005b8381101561355f578082015181840152602081019050613544565b8381111561356e576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820f0d15d644f7226e9fc3a9750df7b17434d6cfa665358dc69a37b39bce3935a866c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","5250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d11929190613083565b602060405180830381600087803b158015610d2b57600080fd5b505af1158015610d3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d639190810190612ad9565b9050600181121515610d785760009350610d9c565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f6b2f980959df7c69484eedc69946c27b3743d020380d5f3600dd0b0f57d0f4b18487604051610dcd929190612f92565b60405180910390a180945050505050919050565b60008060008060008060009450610df7896101da565b1515610e65577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94507f231031b5a33d2c7c5550f8174512618ed672d52be443d80b5146746637935cba858a8a8a604051610e559493929190613007565b60405180910390a184955061138f565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601081526020017f6d656d6265725f617574685f74797065000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f109190613061565b602060405180830381600087803b158015610f2a57600080fd5b505af1158015610f3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f629190810190612ab0565b93508373ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610fc857600080fd5b505af1158015610fdc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110009190810190612a35565b92508273ffffffffffffffffffffffffffffffffffffffff1663ae763db58a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110579190613176565b600060405180830381600087803b15801561107157600080fd5b505af1158015611085573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156110ed57600080fd5b505af1158015611101573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111259190810190612a87565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161117c9190613314565b600060405180830381600087803b15801561119657600080fd5b505af11580156111aa573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112039190613200565b600060405180830381600087803b15801561121d57600080fd5b505af1158015611231573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663664b37d66040805190810160405280600a81526020017f6669785f69645f3030360000000000000000000000000000000000000000000081525084866040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112c3939291906130e3565b602060405180830381600087803b1580156112dd57600080fd5b505af11580156112f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113159190810190612ad9565b905060018112151561132a576000945061134e565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7f231031b5a33d2c7c5550f8174512618ed672d52be443d80b5146746637935cba858a8a8a6040516113839493929190613007565b60405180910390a18095505b50505050509392505050565b60008060008060008093506113c78760008151811015156113b857fe5b906020019060200201516101da565b15611452577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f84888860405161142293929190612f4d565b60405180910390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9450611b03565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601081526020017f6d656d6265725f617574685f74797065000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114fd9190613061565b602060405180830381600087803b15801561151757600080fd5b505af115801561152b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061154f9190810190612ab0565b92508273ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156115b557600080fd5b505af11580156115c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115ed9190810190612a87565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb46040805190810160405280600a81526020017f6669785f69645f303036000000000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611679919061328a565b600060405180830381600087803b15801561169357600080fd5b505af11580156116a7573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48860008151811015156116d657fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117189190613141565b600060405180830381600087803b15801561173257600080fd5b505af1158015611746573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600181518110151561177557fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117b791906132df565b600060405180830381600087803b1580156117d157600080fd5b505af11580156117e5573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600281518110151561181457fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118569190613255565b600060405180830381600087803b15801561187057600080fd5b505af1158015611884573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48860038151811015156118b357fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118f591906131cb565b600060405180830381600087803b15801561190f57600080fd5b505af1158015611923573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161197c9190613369565b600060405180830381600087803b15801561199657600080fd5b505af11580156119aa573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06040805190810160405280600a81526020017f6669785f69645f30303600000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a3a9291906130b3565b602060405180830381600087803b158015611a5457600080fd5b505af1158015611a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a8c9190810190612ad9565b90506001811415611aa05760009350611ac4565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f848888604051611af793929190612f4d565b60405180910390a18094505b5050505092915050565b600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280601081526020017f6d656d6265725f617574685f74797065000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bbf9190613061565b602060405180830381600087803b158015611bd957600080fd5b505af1158015611bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c119190810190612ab0565b91508173ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f303036000000000000000000000000000000000000000000008152508473ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611cc957600080fd5b505af1158015611cdd573d60","","88019750600181019050612cae565b508196508694505050505092915050565b612cfe816134a6565b82525050565b612d0d8161350e565b82525050565b612d1c81613520565b82525050565b612d2b816134b2565b82525050565b6000612d3c8261346e565b808452612d50816020860160208601613541565b612d5981613574565b602085010191505092915050565b6000612d7282613463565b808452612d86816020860160208601613541565b612d8f81613574565b602085010191505092915050565b6000600782527f747970655f6964000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600982527f747970655f6e616d6500000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000602082019050612efc6000830184612cf5565b92915050565b6000602082019050612f176000830184612d22565b92915050565b6000604082019050612f326000830185612d22565b8181036020830152612f448184612c87565b90509392505050565b6000606082019050612f626000830186612d22565b8181036020830152612f748185612c87565b90508181036040830152612f888184612d31565b9050949350505050565b6000604082019050612fa76000830185612d22565b8181036020830152612fb98184612d31565b90509392505050565b6000606082019050612fd76000830186612d22565b8181036020830152612fe98185612d31565b90508181036040830152612ffd8184612d31565b9050949350505050565b600060808201905061301c6000830187612d22565b818103602083015261302e8186612d31565b905081810360408301526130428185612d31565b905081810360608301526130568184612d31565b905095945050505050565b6000602082019050818103600083015261307b8184612d67565b905092915050565b6000604082019050818103600083015261309d8185612d67565b90506130ac6020830184612d04565b9392505050565b600060408201905081810360008301526130cd8185612d67565b90506130dc6020830184612d13565b9392505050565b600060608201905081810360008301526130fd8186612d67565b905061310c6020830185612d13565b6131196040830184612d04565b949350505050565b6000602082019050818103600083015261313a81612d9d565b9050919050565b6000604082019050818103600083015261315a81612d9d565b9050818103602083015261316e8184612d67565b905092915050565b6000604082019050818103600083015261318f81612d9d565b905081810360208301526131a38184612d31565b905092915050565b600060208201905081810360008301526131c481612dd4565b9050919050565b600060408201905081810360008301526131e481612dd4565b905081810360208301526131f88184612d67565b905092915050565b6000604082019050818103600083015261321981612dd4565b9050818103602083015261322d8184612d31565b905092915050565b6000602082019050818103600083015261324e81612e0b565b9050919050565b6000604082019050818103600083015261326e81612e0b565b905081810360208301526132828184612d67565b905092915050565b600060408201905081810360008301526132a381612e42565b905081810360208301526132b78184612d67565b905092915050565b600060208201905081810360008301526132d881612e79565b9050919050565b600060408201905081810360008301526132f881612e79565b9050818103602083015261330c8184612d67565b905092915050565b6000604082019050818103600083015261332d81612e79565b905081810360208301526133418184612d31565b905092915050565b6000602082019050818103600083015261336281612eb0565b9050919050565b6000604082019050818103600083015261338281612eb0565b905081810360208301526133968184612d31565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156133c157600080fd5b8060405250919050565b600067ffffffffffffffff8211156133e257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561340a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561343657600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60006134c782613486565b9050919050565b60006134d982613486565b9050919050565b60006134eb82613486565b9050919050565b60006134fd82613486565b9050919050565b6000819050919050565b600061351982613486565b9050919050565b600061352b82613486565b9050919050565b82818337600083830152505050565b60005b8381101561355f578082015181840152602081019050613544565b8381111561356e576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820b837266e03fdb692682db517e03d9236b8c545482c6440b70e08d828f15d13476c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"type_id\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"updateExtJson\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"type_id\",\"type\":\"string\"},{\"name\":\"type_name\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"type_id\",\"type\":\"string\"}],\"name\":\"isExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selectAll\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"params\",\"type\":\"string[]\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"type_id\",\"type\":\"string\"}],\"name\":\"deleteByTypeId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insertEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"type_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"type_name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"type_id\",\"type\":\"string\"}],\"name\":\"deleteByTypeIdEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"type_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"updateExtJsonEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_UPDATEEXTJSON = "updateExtJson";

    public static final String FUNC_UPDATE = "update";

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_SELECTALL = "selectAll";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_DELETEBYTYPEID = "deleteByTypeId";

    public static final Event INSERTEVENT_EVENT = new Event("insertEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEVENT_EVENT = new Event("updateEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event DELETEBYTYPEIDEVENT_EVENT = new Event("deleteByTypeIdEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEXTJSONEVENT_EVENT = new Event("updateExtJsonEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected MemberAuthTypeContract(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt updateExtJson(String type_id, String ext_json) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(type_id),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateExtJson(String type_id, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(type_id),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateExtJson(String type_id, String ext_json) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(type_id),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, String> getUpdateExtJsonInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateExtJsonOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt update(String type_id, String type_name, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(type_id),
                new Utf8String(type_name),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void update(String type_id, String type_name, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(type_id),
                new Utf8String(type_name),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdate(String type_id, String type_name, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATE, 
                Arrays.<Type>asList(new Utf8String(type_id),
                new Utf8String(type_name),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Boolean isExist(String type_id) throws ContractException {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new Utf8String(type_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public Tuple2<BigInteger, List<String>> selectAll() throws ContractException {
        final Function function = new Function(FUNC_SELECTALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public TransactionReceipt insert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(List<String> params, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<List<String>, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<List<String>, String>(

                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt deleteByTypeId(String type_id) {
        final Function function = new Function(
                FUNC_DELETEBYTYPEID, 
                Arrays.<Type>asList(new Utf8String(type_id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void deleteByTypeId(String type_id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETEBYTYPEID, 
                Arrays.<Type>asList(new Utf8String(type_id)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteByTypeId(String type_id) {
        final Function function = new Function(
                FUNC_DELETEBYTYPEID, 
                Arrays.<Type>asList(new Utf8String(type_id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getDeleteByTypeIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETEBYTYPEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<BigInteger> getDeleteByTypeIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_DELETEBYTYPEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertEventEventResponse> getInsertEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTEVENT_EVENT, transactionReceipt);
        ArrayList<InsertEventEventResponse> responses = new ArrayList<InsertEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertEventEventResponse typedResponse = new InsertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateEventEventResponse> getUpdateEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateEventEventResponse> responses = new ArrayList<UpdateEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateEventEventResponse typedResponse = new UpdateEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.type_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.type_name = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<DeleteByTypeIdEventEventResponse> getDeleteByTypeIdEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEBYTYPEIDEVENT_EVENT, transactionReceipt);
        ArrayList<DeleteByTypeIdEventEventResponse> responses = new ArrayList<DeleteByTypeIdEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            DeleteByTypeIdEventEventResponse typedResponse = new DeleteByTypeIdEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.type_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeDeleteByTypeIdEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYTYPEIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeDeleteByTypeIdEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYTYPEIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateExtJsonEventEventResponse> getUpdateExtJsonEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEXTJSONEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateExtJsonEventEventResponse> responses = new ArrayList<UpdateExtJsonEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateExtJsonEventEventResponse typedResponse = new UpdateExtJsonEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.type_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateExtJsonEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateExtJsonEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static MemberAuthTypeContract load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new MemberAuthTypeContract(contractAddress, client, credential);
    }

    public static MemberAuthTypeContract deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(MemberAuthTypeContract.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public List<String> params;

        public String ext_json;
    }

    public static class UpdateEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String type_id;

        public String type_name;

        public String updated_time;
    }

    public static class DeleteByTypeIdEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String type_id;
    }

    public static class UpdateExtJsonEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String type_id;

        public String ext_json;
    }
}
