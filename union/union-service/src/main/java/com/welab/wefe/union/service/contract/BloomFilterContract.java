package com.welab.wefe.union.service.contract;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class BloomFilterContract extends Contract {
    public static final String[] BINARY_ARRAY = {"60806040523480156200001157600080fd5b506110016000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356004b6a6040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162000101919062000296565b602060405180830381600087803b1580156200011c57600080fd5b505af115801562000131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000157919081019062000174565b5062000340565b60006200016c8251620002ef565b905092915050565b6000602082840312156200018757600080fd5b600062000197848285016200015e565b91505092915050565b6000620001ad82620002e4565b808452620001c3816020860160208601620002f9565b620001ce816200032f565b602085010191505092915050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000604182527f646174615f7265736f757263655f69642c686173685f66756e6374696f6e2c6360208301527f7265617465645f74696d652c757064617465645f74696d652c6578745f6a736f60408301527f6e000000000000000000000000000000000000000000000000000000000000006060830152608082019050919050565b60006060820190508181036000830152620002b28184620001a0565b90508181036020830152620002c781620001dc565b90508181036040830152620002dc8162000213565b905092915050565b600081519050919050565b6000819050919050565b60005b8381101562000319578082015181840152602081019050620002fc565b8381111562000329576000848401525b50505050565b6000601f19601f8301169050919050565b61372780620003506000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806326b477fd1461007d5780634d3d096b146100bb5780635d536a93146100f857806363964aa3146101355780637291440b1461017257806397291150146101af575b600080fd5b34801561008957600080fd5b506100a4600480360361009f9190810190612ce4565b6101ec565b6040516100b29291906130ca565b60405180910390f35b3480156100c757600080fd5b506100e260048036036100dd9190810190612ce4565b61061e565b6040516100ef9190613094565b60405180910390f35b34801561010457600080fd5b5061011f600480360361011a9190810190612ce4565b6109e2565b60405161012c91906130af565b60405180910390f35b34801561014157600080fd5b5061015c60048036036101579190810190612d66565b610dbe565b60405161016991906130af565b60405180910390f35b34801561017e57600080fd5b5061019960048036036101949190810190612d66565b611300565b6040516101a691906130af565b60405180910390f35b3480156101bb57600080fd5b506101d660048036036101d19190810190612bab565b611941565b6040516101e391906130af565b60405180910390f35b6000606060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016102a091906131c9565b602060405180830381600087803b1580156102ba57600080fd5b505af11580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102f29190810190612c92565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561035857600080fd5b505af115801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103909190810190612c17565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016103e791906134b1565b600060405180830381600087803b15801561040157600080fd5b505af1158015610415573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600a81526020017f6669785f69645f30313100000000000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104a59291906131eb565b602060405180830381600087803b1580156104bf57600080fd5b505af11580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104f79190810190612c40565b90508073ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561055d57600080fd5b505af1158015610571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105959190810190612cbb565b60001415610603577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60006040519080825280602002602001820160405280156105f357816020015b60608152602001906001900390816105de5790505b5081915080905094509450610616565b600061060e82612093565b819150945094505b505050915091565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106cf91906131c9565b602060405180830381600087803b1580156106e957600080fd5b505af11580156106fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107219190810190612c92565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561078757600080fd5b505af115801561079b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107bf9190810190612c17565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1866040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161081691906134b1565b600060405180830381600087803b15801561083057600080fd5b505af1158015610844573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e8434e396040805190810160405280600a81526020017f6669785f69645f30313100000000000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016108d49291906131eb565b602060405180830381600087803b1580156108ee57600080fd5b505af1158015610902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109269190810190612c40565b905060008173ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561098e57600080fd5b505af11580156109a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109c69190810190612cbb565b11156109d557600193506109da565b600093505b505050919050565b60008060008060008093506109f68661061e565b1515610a3d577fd22fb9033b9b4d290a6e3f3ff139198183826a80f0850ac55f195cc8705cf2ca8487604051610a2d92919061313f565b60405180910390a1839450610db5565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ae891906131c9565b602060405180830381600087803b158015610b0257600080fd5b505af1158015610b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b3a9190810190612c92565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610ba057600080fd5b505af1158015610bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bd89190810190612c17565b91508173ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610c2f91906134b1565b600060405180830381600087803b158015610c4957600080fd5b505af1158015610c5d573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166328bb21176040805190810160405280600a81526020017f6669785f69645f303131000000000000000000000000000000000000000000","00815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ced9291906131eb565b602060405180830381600087803b158015610d0757600080fd5b505af1158015610d1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d3f9190810190612cbb565b9050600181121515610d545760009350610d78565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fd22fb9033b9b4d290a6e3f3ff139198183826a80f0850ac55f195cc8705cf2ca8487604051610da992919061313f565b60405180910390a18394505b50505050919050565b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e7291906131c9565b602060405180830381600087803b158015610e8c57600080fd5b505af1158015610ea0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ec49190810190612c92565b94508473ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f2a57600080fd5b505af1158015610f3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f629190810190612c17565b93508373ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610fb991906134b1565b600060405180830381600087803b158015610fd357600080fd5b505af1158015610fe7573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561104f57600080fd5b505af1158015611063573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110879190810190612c69565b92508273ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110de9190613313565b600060405180830381600087803b1580156110f857600080fd5b505af115801561110c573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161116591906133d2565b600060405180830381600087803b15801561117f57600080fd5b505af1158015611193573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3031310000000000000000000000000000000000000000000081525085876040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112259392919061324b565b602060405180830381600087803b15801561123f57600080fd5b505af1158015611253573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112779190810190612cbb565b91506000905060018212151561129057600090506112b4565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90505b7f91fa9d6109b9b8b47733f98f4b6858346683ebdf73ba3c2f98b90c0d352f83e1818a8a8a6040516112e9949392919061316f565b60405180910390a180955050505050509392505050565b600080600080600080600094506113168961061e565b1515611384577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd94507f9a7f95a08114585df56e335cc7d7c8408a6ee0be6f3f2250ef933b4f7e158932858a8a8a604051611374949392919061316f565b60405180910390a1849550611935565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161142f91906131c9565b602060405180830381600087803b15801561144957600080fd5b505af115801561145d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114819190810190612c92565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156114e757600080fd5b505af11580156114fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061151f9190810190612c17565b92508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d18a6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161157691906134b1565b600060405180830381600087803b15801561159057600080fd5b505af11580156115a4573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115fd91906132be565b600060405180830381600087803b15801561161757600080fd5b505af115801561162b573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561169357600080fd5b505af11580156116a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116cb9190810190612c69565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161172291906132be565b600060405180830381600087803b15801561173c57600080fd5b505af1158015611750573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117a991906133d2565b600060405180830381600087803b1580156117c357600080fd5b505af11580156117d7573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663bf2b70a16040805190810160405280600a81526020017f6669785f69645f3031310000000000000000000000000000000000000000000081525084866040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118699392919061324b565b602060405180830381600087803b15801561188357600080fd5b505af1158015611897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118bb9190810190612cbb565b90506001811215156118d057600094506118f4565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe94505b7f9a7f95a08114585df56e335cc7d7c8408a6ee0be6f3f2250ef933b4f7e158932858a8a8a604051611929949392919061316f565b60405180910390a18495505b50505050509392505050565b600080600080600080935061196d87600081518110151561195e57fe5b9060200190602002015161061e565b156119d8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f8488886040516119c8939291906130fa565b60405180910390a1839450612089565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a8391906131c9565b602060405180830381600087803b158015611a9d57600080fd5b505af1158015611ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ad59190810190612c92565b92508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611b3b57600080fd5b505af1158015611b4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b739190810190612c69565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600a81526020017f6669785f69645f303131000000000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bff9190613348565b600060405180830381600087803b158015611c1957600080fd5b505af1158015611c2d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886000815181101515611c5c57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c9e919061347c565b600060405180830381600087803b158015","611cb857600080fd5b505af1158015611ccc573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886001815181101515611cfb57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d3d9190613289565b600060405180830381600087803b158015611d5757600080fd5b505af1158015611d6b573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886002815181101515611d9a57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ddc9190613427565b600060405180830381600087803b158015611df657600080fd5b505af1158015611e0a573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516886003815181101515611e3957fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e7b919061339d565b600060405180830381600087803b158015611e9557600080fd5b505af1158015611ea9573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b516876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f029190613313565b600060405180830381600087803b158015611f1c57600080fd5b505af1158015611f30573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166331afac366040805190810160405280600a81526020017f6669785f69645f30313100000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611fc092919061321b565b602060405180830381600087803b158015611fda57600080fd5b505af1158015611fee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120129190810190612cbb565b90506001811415612026576000935061204a565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7f5157dc1ab0b55c7621be94a34b2ae4228f7d16e8271628060cc027b1a513b12f84888860405161207d939291906130fa565b60405180910390a18394505b5050505092915050565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156120ff57600080fd5b505af1158015612113573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121379190810190612cbb565b60405190808252806020026020018201604052801561216a57816020015b60608152602001906001900390816121555790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156121d657600080fd5b505af11580156121ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061220e9190810190612cbb565b83121561278e578573ffffffffffffffffffffffffffffffffffffffff1663846719e0846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161226a91906130af565b602060405180830381600087803b15801561228457600080fd5b505af1158015612298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122bc9190810190612c69565b91506123ae6123738373ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123179061345c565b600060405180830381600087803b15801561233157600080fd5b505af1158015612345573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061236e9190810190612d25565b61279a565b6040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506127f3565b905061246b816124668473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161240a906134e6565b600060405180830381600087803b15801561242457600080fd5b505af1158015612438573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506124619190810190612d25565b61279a565b6127f3565b90506124ac816040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506127f3565b9050612569816125648473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161250890613407565b600060405180830381600087803b15801561252257600080fd5b505af1158015612536573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061255f9190810190612d25565b61279a565b6127f3565b90506125aa816040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506127f3565b9050612667816126628473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016126069061337d565b600060405180830381600087803b15801561262057600080fd5b505af1158015612634573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061265d9190810190612d25565b61279a565b6127f3565b90506126a8816040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506127f3565b9050612765816127608473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612704906132f3565b600060405180830381600087803b15801561271e57600080fd5b505af1158015612732573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061275b9190810190612d25565b61279a565b6127f3565b905080848481518110151561277657fe5b90602001906020020181905250826001019250612172565b83945050505050919050565b606060006127a7836129c4565b14156127ea576040805190810160405280600181526020017f200000000000000000000000000000000000000000000000000000000000000081525090506127ee565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f19166020018201604052801561283b5781602001602082028038833980820191505090505b50935083925060009150600090505b85518110156128fd57858181518110151561286157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156128c057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061284a565b600090505b84518110156129b557848181518110151561291957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561297857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612902565b83965050505050505092915050565b600081519050919050565b600082601f83011215156129e257600080fd5b81356129f56129f082613533565b613506565b9150818183526020840193506020810190508360005b83811015612a3b5781358601612a218882612aa9565b845260208401935060208301925050600181019050612a0b565b5050505092915050565b6000612a518251613624565b905092915050565b6000612a658251613636565b905092915050565b6000612a798251613648565b905092915050565b6000612a8d825161365a565b905092915050565b6000612aa1825161366c565b905092915050565b600082601f8301121515612abc57600080fd5b8135612acf612aca8261355b565b613506565b91508082526020830160208301858383011115612aeb57600080fd5b612af683828461369a565b50505092915050565b600082601f8301121515612b1257600080fd5b8135612b25612b2082613587565b613506565b91508082526020830160208301858383011115612b4157600080fd5b612b4c83828461369a565b50505092915050565b600082601f8301121515612b6857600080fd5b8151612b7b612b7682613587565b613506565b91508082526020830160208301858383011115612b9757600080fd5b612ba28382846136a9565b50505092915050565b60008060408385031215612bbe57600080fd5b600083013567ffffffffffffffff811115612bd857600080fd5b612be4858286016129cf565b925050602083013567ffffffffffffffff811115612c0157600080fd5b612c0d85828601612aff565b9150509250929050565b600060208284031215612c2957600080fd5b6000612c3784828501612a45565b91505092915050565b600060208284031215612c5257600080fd5b6000612c6084828501612a59565b91505092915050565b600060208284031215612c7b57600080fd5b6000612c8984828501612a6d565b91505092915050565b600060208284031215612ca457600080fd5b6000612cb284828501612a","81565b91505092915050565b600060208284031215612ccd57600080fd5b6000612cdb84828501612a95565b91505092915050565b600060208284031215612cf657600080fd5b600082013567ffffffffffffffff811115612d1057600080fd5b612d1c84828501612aff565b91505092915050565b600060208284031215612d3757600080fd5b600082015167ffffffffffffffff811115612d5157600080fd5b612d5d84828501612b55565b91505092915050565b600080600060608486031215612d7b57600080fd5b600084013567ffffffffffffffff811115612d9557600080fd5b612da186828701612aff565b935050602084013567ffffffffffffffff811115612dbe57600080fd5b612dca86828701612aff565b925050604084013567ffffffffffffffff811115612de757600080fd5b612df386828701612aff565b9150509250925092565b6000612e08826135c0565b80845260208401935083602082028501612e21856135b3565b60005b84811015612e5a578383038852612e3c838351612edd565b9250612e47826135e1565b9150602088019750600181019050612e24565b508196508694505050505092915050565b612e748161360e565b82525050565b612e8381613676565b82525050565b612e9281613688565b82525050565b612ea18161361a565b82525050565b6000612eb2826135d6565b808452612ec68160208601602086016136a9565b612ecf816136dc565b602085010191505092915050565b6000612ee8826135cb565b808452612efc8160208601602086016136a9565b612f05816136dc565b602085010191505092915050565b6000600d82527f686173685f66756e6374696f6e000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000601082527f646174615f7265736f757263655f6964000000000000000000000000000000006020830152604082019050919050565b6000601182527f7570646174654861736846756e74696f6e0000000000000000000000000000006020830152604082019050919050565b60006020820190506130a96000830184612e6b565b92915050565b60006020820190506130c46000830184612e98565b92915050565b60006040820190506130df6000830185612e98565b81810360208301526130f18184612dfd565b90509392505050565b600060608201905061310f6000830186612e98565b81810360208301526131218185612dfd565b905081810360408301526131358184612ea7565b9050949350505050565b60006040820190506131546000830185612e98565b81810360208301526131668184612ea7565b90509392505050565b60006080820190506131846000830187612e98565b81810360208301526131968186612ea7565b905081810360408301526131aa8185612ea7565b905081810360608301526131be8184612ea7565b905095945050505050565b600060208201905081810360008301526131e38184612edd565b905092915050565b600060408201905081810360008301526132058185612edd565b90506132146020830184612e7a565b9392505050565b600060408201905081810360008301526132358185612edd565b90506132446020830184612e89565b9392505050565b600060608201905081810360008301526132658186612edd565b90506132746020830185612e89565b6132816040830184612e7a565b949350505050565b600060408201905081810360008301526132a281612f13565b905081810360208301526132b68184612edd565b905092915050565b600060408201905081810360008301526132d781612f13565b905081810360208301526132eb8184612ea7565b905092915050565b6000602082019050818103600083015261330c81612f4a565b9050919050565b6000604082019050818103600083015261332c81612f4a565b905081810360208301526133408184612ea7565b905092915050565b6000604082019050818103600083015261336181612f81565b905081810360208301526133758184612edd565b905092915050565b6000602082019050818103600083015261339681612fb8565b9050919050565b600060408201905081810360008301526133b681612fb8565b905081810360208301526133ca8184612edd565b905092915050565b600060408201905081810360008301526133eb81612fb8565b905081810360208301526133ff8184612ea7565b905092915050565b6000602082019050818103600083015261342081612fef565b9050919050565b6000604082019050818103600083015261344081612fef565b905081810360208301526134548184612edd565b905092915050565b6000602082019050818103600083015261347581613026565b9050919050565b6000604082019050818103600083015261349581613026565b905081810360208301526134a98184612edd565b905092915050565b600060408201905081810360008301526134ca81613026565b905081810360208301526134de8184612ea7565b905092915050565b600060208201905081810360008301526134ff8161305d565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561352957600080fd5b8060405250919050565b600067ffffffffffffffff82111561354a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561357257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561359e57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600061362f826135ee565b9050919050565b6000613641826135ee565b9050919050565b6000613653826135ee565b9050919050565b6000613665826135ee565b9050919050565b6000819050919050565b6000613681826135ee565b9050919050565b6000613693826135ee565b9050919050565b82818337600083830152505050565b60005b838110156136c75780820151818401526020810190506136ac565b838111156136d6576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058204389f311a54e325a42e12ce463643da11bb19d7468c3f0d77880057937c1b7146c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","5af1158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ce69190810190612cbb565b915060009050600182121515610cff5760009050610d23565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90505b7fb36a4960db7128c065f905021bc6b7ab38c8106c359c6ac8dcd55ed9356c994c818a8a8a604051610d58949392919061316f565b60405180910390a180955050505050509392505050565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e2091906131c9565b602060405180830381600087803b158015610e3a57600080fd5b505af1158015610e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e729190810190612c92565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610ed857600080fd5b505af1158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f109190810190612c17565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f6791906132de565b600060405180830381600087803b158015610f8157600080fd5b505af1158015610f95573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f30313100000000000000000000000000000000000000000000815250846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110259291906131eb565b602060405180830381600087803b15801561103f57600080fd5b505af1158015611053573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110779190810190612c40565b905060008173ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156110df57600080fd5b505af11580156110f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111179190810190612cbb565b1115611126576001935061112b565b600093505b505050919050565b600080600080600080935061114786610d6f565b151561118e577fbd9cffb3c2fee8f78eb1338faa81fd19badc50fceb4a0a6a050f9c0cf3560910848760405161117e92919061313f565b60405180910390a1839450611506565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161123991906131c9565b602060405180830381600087803b15801561125357600080fd5b505af1158015611267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061128b9190810190612c92565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156112f157600080fd5b505af1158015611305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113299190810190612c17565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161138091906132de565b600060405180830381600087803b15801561139a57600080fd5b505af11580156113ae573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166309ff42f06040805190810160405280600a81526020017f6669785f69645f30313100000000000000000000000000000000000000000000815250846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161143e9291906131eb565b602060405180830381600087803b15801561145857600080fd5b505af115801561146c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114909190810190612cbb565b90506001811215156114a557600093506114c9565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fbd9cffb3c2fee8f78eb1338faa81fd19badc50fceb4a0a6a050f9c0cf356091084876040516114fa92919061313f565b60405180910390a18394505b50505050919050565b600080600080600080935061153b87600081518110151561152c57fe5b90602001906020020151610d6f565b156115a6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93507fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f848888604051611596939291906130fa565b60405180910390a1839450611c57565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161165191906131c9565b602060405180830381600087803b15801561166b57600080fd5b505af115801561167f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116a39190810190612c92565b92508273ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561170957600080fd5b505af115801561171d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117419190810190612c69565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb46040805190810160405280600a81526020017f6669785f69645f303131000000000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117cd919061347c565b600060405180830381600087803b1580156117e757600080fd5b505af11580156117fb573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600081518110151561182a57fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161186c91906132a9565b600060405180830381600087803b15801561188657600080fd5b505af115801561189a573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48860018151811015156118c957fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161190b9190613412565b600060405180830381600087803b15801561192557600080fd5b505af1158015611939573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb488600281518110151561196857fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016119aa91906133bd565b600060405180830381600087803b1580156119c457600080fd5b505af11580156119d8573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886003815181101515611a0757fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a499190613333565b600060405180830381600087803b158015611a6357600080fd5b505af1158015611a77573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ad091906134d1565b600060405180830381600087803b158015611aea57600080fd5b505af1158015611afe573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06040805190810160405280600a81526020017f6669785f69645f30313100000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b8e92919061321b565b602060405180830381600087803b158015611ba857600080fd5b505af1158015611bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611be09190810190612cbb565b90506001811415611bf45760009350611c18565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe93505b7fcb263a23d186eec891d55f1e0ba96ec8290af8c893d32d644c22dbff0953e51f848888604051611c4b939291906130fa565b60405180910390a18394505b5050505092915050565b6000606060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160","405280600c81526020017f626c6f6f6d5f66696c74657200000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d1591906131c9565b602060405180830381600087803b158015611d2f57600080fd5b505af1158015611d43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d679190810190612c92565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611dcd57600080fd5b505af1158015611de1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e059190810190612c17565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e5c91906132de565b600060405180830381600087803b158015611e7657600080fd5b505af1158015611e8a573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8ac59576040805190810160405280600a81526020017f6669785f69645f30313100000000000000000000000000000000000000000000815250846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f1a9291906131eb565b602060405180830381600087803b158015611f3457600080fd5b505af1158015611f48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f6c9190810190612c40565b90508073ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611fd257600080fd5b505af1158015611fe6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061200a9190810190612cbb565b60001415612078577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd600060405190808252806020026020018201604052801561206857816020015b60608152602001906001900390816120535790505b508191508090509450945061208b565b600061208382612093565b819150945094505b505050915091565b60608060008060608573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156120ff57600080fd5b505af1158015612113573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121379190810190612cbb565b60405190808252806020026020018201604052801561216a57816020015b60608152602001906001900390816121555790505b509350600092505b8573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156121d657600080fd5b505af11580156121ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061220e9190810190612cbb565b83121561278e578573ffffffffffffffffffffffffffffffffffffffff16633dd2b614846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161226a91906130af565b602060405180830381600087803b15801561228457600080fd5b505af1158015612298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122bc9190810190612c69565b91506123ae6123738373ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161231790613289565b600060405180830381600087803b15801561233157600080fd5b505af1158015612345573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061236e9190810190612d25565b61279a565b6040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506127f3565b905061246b816124668473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161240a906133f2565b600060405180830381600087803b15801561242457600080fd5b505af1158015612438573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506124619190810190612d25565b61279a565b6127f3565b90506124ac816040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506127f3565b9050612569816125648473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125089061339d565b600060405180830381600087803b15801561252257600080fd5b505af1158015612536573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061255f9190810190612d25565b61279a565b6127f3565b90506125aa816040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506127f3565b9050612667816126628473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161260690613313565b600060405180830381600087803b15801561262057600080fd5b505af1158015612634573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061265d9190810190612d25565b61279a565b6127f3565b90506126a8816040805190810160405280600181526020017f7c000000000000000000000000000000000000000000000000000000000000008152506127f3565b9050612765816127608473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612704906134b1565b600060405180830381600087803b15801561271e57600080fd5b505af1158015612732573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061275b9190810190612d25565b61279a565b6127f3565b905080848481518110151561277657fe5b90602001906020020181905250826001019250612172565b83945050505050919050565b606060006127a7836129c4565b14156127ea576040805190810160405280600181526020017f200000000000000000000000000000000000000000000000000000000000000081525090506127ee565b8190505b919050565b606080606080606060008088955087945084518651016040519080825280601f01601f19166020018201604052801561283b5781602001602082028038833980820191505090505b50935083925060009150600090505b85518110156128fd57858181518110151561286157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156128c057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061284a565b600090505b84518110156129b557848181518110151561291957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561297857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612902565b83965050505050505092915050565b600081519050919050565b600082601f83011215156129e257600080fd5b81356129f56129f082613533565b613506565b9150818183526020840193506020810190508360005b83811015612a3b5781358601612a218882612aa9565b845260208401935060208301925050600181019050612a0b565b5050505092915050565b6000612a518251613624565b905092915050565b6000612a658251613636565b905092915050565b6000612a798251613648565b905092915050565b6000612a8d825161365a565b905092915050565b6000612aa1825161366c565b905092915050565b600082601f8301121515612abc57600080fd5b8135612acf612aca8261355b565b613506565b91508082526020830160208301858383011115612aeb57600080fd5b612af683828461369a565b50505092915050565b600082601f8301121515612b1257600080fd5b8135612b25612b2082613587565b613506565b91508082526020830160208301858383011115612b4157600080fd5b612b4c83828461369a565b50505092915050565b600082601f8301121515612b6857600080fd5b8151612b7b612b7682613587565b613506565b91508082526020830160208301858383011115612b9757600080fd5b612ba28382846136a9565b50505092915050565b60008060408385031215612bbe57600080fd5b600083013567ffffffffffffffff811115612bd857600080fd5b612be4858286016129cf565b925050602083013567ffffffffffffffff811115612c0157600080fd5b612c0d85828601612aff565b9150509250929050565b600060208284031215612c2957600080fd5b6000612c3784828501612a45565b91505092915050565b600060208284031215612c5257600080fd5b6000612c6084828501612a59565b91505092915050565b600060208284031215612c7b57600080fd5b6000612c8984828501612a6d565b91505092915050565b600060208284031215612ca457600080fd5b6000612cb284828501612a","81565b91505092915050565b600060208284031215612ccd57600080fd5b6000612cdb84828501612a95565b91505092915050565b600060208284031215612cf657600080fd5b600082013567ffffffffffffffff811115612d1057600080fd5b612d1c84828501612aff565b91505092915050565b600060208284031215612d3757600080fd5b600082015167ffffffffffffffff811115612d5157600080fd5b612d5d84828501612b55565b91505092915050565b600080600060608486031215612d7b57600080fd5b600084013567ffffffffffffffff811115612d9557600080fd5b612da186828701612aff565b935050602084013567ffffffffffffffff811115612dbe57600080fd5b612dca86828701612aff565b925050604084013567ffffffffffffffff811115612de757600080fd5b612df386828701612aff565b9150509250925092565b6000612e08826135c0565b80845260208401935083602082028501612e21856135b3565b60005b84811015612e5a578383038852612e3c838351612edd565b9250612e47826135e1565b9150602088019750600181019050612e24565b508196508694505050505092915050565b612e748161360e565b82525050565b612e8381613676565b82525050565b612e9281613688565b82525050565b612ea18161361a565b82525050565b6000612eb2826135d6565b808452612ec68160208601602086016136a9565b612ecf816136dc565b602085010191505092915050565b6000612ee8826135cb565b808452612efc8160208601602086016136a9565b612f05816136dc565b602085010191505092915050565b6000601082527f646174615f7265736f757263655f6964000000000000000000000000000000006020830152604082019050919050565b6000600c82527f757064617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f637265617465645f74696d6500000000000000000000000000000000000000006020830152604082019050919050565b6000601182527f7570646174654861736846756e74696f6e0000000000000000000000000000006020830152604082019050919050565b6000600d82527f686173685f66756e6374696f6e000000000000000000000000000000000000006020830152604082019050919050565b6000600682527f6669785f696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6578745f6a736f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b60006020820190506130a96000830184612e6b565b92915050565b60006020820190506130c46000830184612e98565b92915050565b60006040820190506130df6000830185612e98565b81810360208301526130f18184612dfd565b90509392505050565b600060608201905061310f6000830186612e98565b81810360208301526131218185612dfd565b905081810360408301526131358184612ea7565b9050949350505050565b60006040820190506131546000830185612e98565b81810360208301526131668184612ea7565b90509392505050565b60006080820190506131846000830187612e98565b81810360208301526131968186612ea7565b905081810360408301526131aa8185612ea7565b905081810360608301526131be8184612ea7565b905095945050505050565b600060208201905081810360008301526131e38184612edd565b905092915050565b600060408201905081810360008301526132058185612edd565b90506132146020830184612e7a565b9392505050565b600060408201905081810360008301526132358185612edd565b90506132446020830184612e89565b9392505050565b600060608201905081810360008301526132658186612edd565b90506132746020830185612e89565b6132816040830184612e7a565b949350505050565b600060208201905081810360008301526132a281612f13565b9050919050565b600060408201905081810360008301526132c281612f13565b905081810360208301526132d68184612edd565b905092915050565b600060408201905081810360008301526132f781612f13565b9050818103602083015261330b8184612ea7565b905092915050565b6000602082019050818103600083015261332c81612f4a565b9050919050565b6000604082019050818103600083015261334c81612f4a565b905081810360208301526133608184612edd565b905092915050565b6000604082019050818103600083015261338181612f4a565b905081810360208301526133958184612ea7565b905092915050565b600060208201905081810360008301526133b681612f81565b9050919050565b600060408201905081810360008301526133d681612f81565b905081810360208301526133ea8184612edd565b905092915050565b6000602082019050818103600083015261340b81612fb8565b9050919050565b6000604082019050818103600083015261342b81612fef565b9050818103602083015261343f8184612edd565b905092915050565b6000604082019050818103600083015261346081612fef565b905081810360208301526134748184612ea7565b905092915050565b6000604082019050818103600083015261349581613026565b905081810360208301526134a98184612edd565b905092915050565b600060208201905081810360008301526134ca8161305d565b9050919050565b600060408201905081810360008301526134ea8161305d565b905081810360208301526134fe8184612ea7565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561352957600080fd5b8060405250919050565b600067ffffffffffffffff82111561354a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561357257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561359e57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600061362f826135ee565b9050919050565b6000613641826135ee565b9050919050565b6000613653826135ee565b9050919050565b6000613665826135ee565b9050919050565b6000819050919050565b6000613681826135ee565b9050919050565b6000613693826135ee565b9050919050565b82818337600083830152505050565b60005b838110156136c75780820151818401526020810190506136ac565b838111156136d6576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820d33f95806e4bf75456844682ff7779510b80881dcc296ae49e8b36287e5c12466c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[{\"name\":\"data_resource_id\",\"type\":\"string\"}],\"name\":\"selectById\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"data_resource_id\",\"type\":\"string\"}],\"name\":\"isExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data_resource_id\",\"type\":\"string\"}],\"name\":\"deleteByDataResourceId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data_resource_id\",\"type\":\"string\"},{\"name\":\"ext_json\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJson\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data_resource_id\",\"type\":\"string\"},{\"name\":\"hash_function\",\"type\":\"string\"},{\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateHashFuntion\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"params\",\"type\":\"string[]\"},{\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"params\",\"type\":\"string[]\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"}],\"name\":\"insertEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"data_resource_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"hash_function\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateHashFunctionEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"data_resource_id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ext_json\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updated_time\",\"type\":\"string\"}],\"name\":\"updateExtJsonEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret_code\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"data_resource_id\",\"type\":\"string\"}],\"name\":\"deleteByDataResourceIdEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_SELECTBYID = "selectById";

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_DELETEBYDATARESOURCEID = "deleteByDataResourceId";

    public static final String FUNC_UPDATEEXTJSON = "updateExtJson";

    public static final String FUNC_UPDATEHASHFUNTION = "updateHashFuntion";

    public static final String FUNC_INSERT = "insert";

    public static final Event INSERTEVENT_EVENT = new Event("insertEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEHASHFUNCTIONEVENT_EVENT = new Event("updateHashFunctionEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATEEXTJSONEVENT_EVENT = new Event("updateExtJsonEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event DELETEBYDATARESOURCEIDEVENT_EVENT = new Event("deleteByDataResourceIdEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected BloomFilterContract(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public Tuple2<BigInteger, List<String>> selectById(String data_resource_id) throws ContractException {
        final Function function = new Function(FUNC_SELECTBYID, 
                Arrays.<Type>asList(new Utf8String(data_resource_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public Boolean isExist(String data_resource_id) throws ContractException {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new Utf8String(data_resource_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt deleteByDataResourceId(String data_resource_id) {
        final Function function = new Function(
                FUNC_DELETEBYDATARESOURCEID, 
                Arrays.<Type>asList(new Utf8String(data_resource_id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void deleteByDataResourceId(String data_resource_id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETEBYDATARESOURCEID, 
                Arrays.<Type>asList(new Utf8String(data_resource_id)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteByDataResourceId(String data_resource_id) {
        final Function function = new Function(
                FUNC_DELETEBYDATARESOURCEID, 
                Arrays.<Type>asList(new Utf8String(data_resource_id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getDeleteByDataResourceIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETEBYDATARESOURCEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<BigInteger> getDeleteByDataResourceIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_DELETEBYDATARESOURCEID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt updateExtJson(String data_resource_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(data_resource_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateExtJson(String data_resource_id, String ext_json, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(data_resource_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateExtJson(String data_resource_id, String ext_json, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(new Utf8String(data_resource_id),
                new Utf8String(ext_json),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateExtJsonInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateExtJsonOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEEXTJSON, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt updateHashFuntion(String data_resource_id, String hash_function, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEHASHFUNTION, 
                Arrays.<Type>asList(new Utf8String(data_resource_id),
                new Utf8String(hash_function),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateHashFuntion(String data_resource_id, String hash_function, String updated_time, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEHASHFUNTION, 
                Arrays.<Type>asList(new Utf8String(data_resource_id),
                new Utf8String(hash_function),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateHashFuntion(String data_resource_id, String hash_function, String updated_time) {
        final Function function = new Function(
                FUNC_UPDATEHASHFUNTION, 
                Arrays.<Type>asList(new Utf8String(data_resource_id),
                new Utf8String(hash_function),
                new Utf8String(updated_time)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getUpdateHashFuntionInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEHASHFUNTION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateHashFuntionOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEHASHFUNTION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt insert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(List<String> params, String ext_json, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(List<String> params, String ext_json) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(params.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(params, Utf8String.class)),
                new Utf8String(ext_json)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<List<String>, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<List<String>, String>(

                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertEventEventResponse> getInsertEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTEVENT_EVENT, transactionReceipt);
        ArrayList<InsertEventEventResponse> responses = new ArrayList<InsertEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertEventEventResponse typedResponse = new InsertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.params = (List<String>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateHashFunctionEventEventResponse> getUpdateHashFunctionEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEHASHFUNCTIONEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateHashFunctionEventEventResponse> responses = new ArrayList<UpdateHashFunctionEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateHashFunctionEventEventResponse typedResponse = new UpdateHashFunctionEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.data_resource_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.hash_function = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateHashFunctionEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEHASHFUNCTIONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateHashFunctionEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEHASHFUNCTIONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateExtJsonEventEventResponse> getUpdateExtJsonEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATEEXTJSONEVENT_EVENT, transactionReceipt);
        ArrayList<UpdateExtJsonEventEventResponse> responses = new ArrayList<UpdateExtJsonEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UpdateExtJsonEventEventResponse typedResponse = new UpdateExtJsonEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.data_resource_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.ext_json = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.updated_time = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateExtJsonEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateExtJsonEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATEEXTJSONEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<DeleteByDataResourceIdEventEventResponse> getDeleteByDataResourceIdEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEBYDATARESOURCEIDEVENT_EVENT, transactionReceipt);
        ArrayList<DeleteByDataResourceIdEventEventResponse> responses = new ArrayList<DeleteByDataResourceIdEventEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            DeleteByDataResourceIdEventEventResponse typedResponse = new DeleteByDataResourceIdEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret_code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.data_resource_id = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeDeleteByDataResourceIdEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYDATARESOURCEIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeDeleteByDataResourceIdEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(DELETEBYDATARESOURCEIDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static BloomFilterContract load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new BloomFilterContract(contractAddress, client, credential);
    }

    public static BloomFilterContract deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(BloomFilterContract.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public List<String> params;

        public String ext_json;
    }

    public static class UpdateHashFunctionEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String data_resource_id;

        public String hash_function;

        public String updated_time;
    }

    public static class UpdateExtJsonEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String data_resource_id;

        public String ext_json;

        public String updated_time;
    }

    public static class DeleteByDataResourceIdEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret_code;

        public String data_resource_id;
    }
}
